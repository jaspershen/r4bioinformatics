[{"path":"index.html","id":"welcome","chapter":"1 Welcome","heading":"1 Welcome","text":"这本书用来系统记录在学习过程中的遇到的问题,学到的知识.can contact via social websites : Personal website GitHub Wechat QQ shenxt stanford.edu Linkedin","code":""},{"path":"r4bioinformatics.html","id":"r4bioinformatics","chapter":"2 R for Bioinformatics analysis","heading":"2 R for Bioinformatics analysis","text":"首先从Markdown的基础语法开始.","code":""},{"path":"r4bioinformatics.html","id":"markdown语法","chapter":"2 R for Bioinformatics analysis","heading":"2.1 Markdown语法","text":"markdown语法一般是使用符号转变为特殊格式.这样,看起来markdown文件都是plain text(纯文本),但是渲染之后,就可以得到特殊格式的文件了.很多语法没有必要记住,只需要记住大概常用的几个就好,遇到不会的,直接google就可以.","code":""},{"path":"markdown.html","id":"markdown","chapter":"3 Markdown","heading":"3 Markdown","text":"首先从Markdown的基础语法开始.","code":""},{"path":"markdown.html","id":"markdown语法-1","chapter":"3 Markdown","heading":"3.1 Markdown语法","text":"markdown语法一般是使用符号转变为特殊格式.这样,看起来markdown文件都是plain text(纯文本),但是渲染之后,就可以得到特殊格式的文件了.很多语法没有必要记住,只需要记住大概常用的几个就好,遇到不会的,直接google就可以.","code":""},{"path":"markdown.html","id":"标题-header","chapter":"3 Markdown","heading":"3.2 标题 (Header)","text":"Markdown一共支持六级标题.语法:","code":"# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题"},{"path":"markdown.html","id":"图片-image","chapter":"3 Markdown","heading":"3.3 图片 (Image)","text":"注意#和文字之间一定要空格.插入图片的基本语法:比如使用下面语句:这种插入图片的办法,不能设置图片的大小,如果想要设置图片大小,可以使用HTML语法(img标签)插入,markdown是支持HTML语法的.HTML img标签还有很多的其他功能,比如对齐等.常用的一些参数:图片默认是靠左对齐.如果想要居中,很奇怪不能使用<img>标签,需要使用<p>标签.也就是段落.","code":"![](图片链接或者本地位置)![](https://www.shenxt.info/files/wechat_QR.jpg)<img src = 'https://www.shenxt.info/files/wechat_QR.jpg' alt = 'shenxiaotao' /><p align = \"center\">\n<img src = 'https://www.shenxt.info/files/wechat_QR.jpg' alt = 'shenxiaotao' height = 50% width = 50% />\n<\/p>"},{"path":"markdown.html","id":"链接-links","chapter":"3 Markdown","heading":"3.4 链接 (Links)","text":"直接写url语法:https://www.shenxt.info/将网址超链接给某段文字语法:想要访问我的网站,请点击这里HTML插入链接如果我们想要更多的链接功能,比如点击链接打开新的窗口.这时候可以使用<>标签.语法:常用属性含义如下:比如我们插入一个网址,点击之后在新的网页打开.想要访问我的网站,请点击这里.将超链接绑定在图片上使用HTML语法,可以将超链接绑定在一个图片上.比如:点击下图查看我的网站:","code":"https://www.shenxt.info/想要访问我的网站,请点击[这里](https://www.shenxt.info/)<a href=\"url\">Link text<\/a>想要访问我的网站,请点击<a href=\"https://www.shenxt.info/\" target = '_blank'>这里<\/a>.<a href=\"https://www.shenxt.info/\" target = '_blank'><img src = 'https://www.shenxt.info/files/wechat_QR.jpg' alt = 'shenxiaotao' height = 50% width = 50% /><\/a>"},{"path":"markdown.html","id":"强调-emphasize","chapter":"3 Markdown","heading":"3.5 强调 (Emphasize)","text":"强调包括斜体,高亮,加粗等等.斜体语法如下:这是斜体这也是斜体加粗语法如下:这是粗体这也是粗体加粗和斜体语法如下:这是粗体也是斜体这是粗体也是斜体删除线语法如下:删除这句话其他可以使用HTML语法实现的强调Markdown只有以上几种强调的用法,使用HTML可以实现一些其他的内容.比如字体颜色等.字体颜色可以使用<font>标签实现.比如我们想用红色字体.这段话使用红色字体.<font>标签常用属性:","code":"*这是斜体*\n_这也是斜体_**这是粗体**\n__这也是粗体__***这是粗体也是斜体***\n___这是粗体也是斜体___~~删除这句话~~<font color=\"red\">这段话使用红色字体.<\/font>"},{"path":"markdown.html","id":"引用blockquotes","chapter":"3 Markdown","heading":"3.6 引用(Blockquotes)","text":"语法:这是一句引用语法:这是一段引用\n这是一段引用","code":"> 这是一句引用> 这是一段引用        \n> 这是一段引用"},{"path":"markdown.html","id":"代码块-code-chunks","chapter":"3 Markdown","heading":"3.7 代码块 (Code chunks)","text":"单独代码语法:最后渲染结果为:如果是使用Rmarkdown,还可以直接让代码运行出现结果.语法:Rmarkdown中代码块中有很多内容可以设置.行内代码比如:行内代码可以用来强调某个部分.当然,在rmakdown中,代码块是可以运行的,所以行内代码也可以运行得到结果.比如:50 cars studied","code":"```\nlibrary(ggplot2)\nlibrary(tidyverse)\n\nmtcars %>% \nggplot(aes(x = gear, cyl)) + \ngeom_point() + \ntheme_bw()\n```library(ggplot2)\nlibrary(tidyverse)\n\nmtcars %>% \nggplot(aes(x = gear, cyl)) + \ngeom_point() + \ntheme_bw()```{r, eval = TRUE}\nlibrary(ggplot2)\nlibrary(tidyverse)\n\nmtcars %>% \nggplot(aes(x = gear, cyl)) + \ngeom_point() + \ntheme_bw()\n```#> ── Attaching core tidyverse packages ──── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ lubridate 1.9.2     ✔ tibble    3.2.1\n#> ✔ purrr     1.0.1     ✔ tidyr     1.3.0\n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors行内代码可以使用``(中间为内容或者代码).`行内代码`可以用来强调某个部分.There were 50 cars studied"},{"path":"markdown.html","id":"水平线-horizontal-rule","chapter":"3 Markdown","heading":"3.8 水平线 (Horizontal rule)","text":"语法:这是一条水平线.这也是一条水平线.","code":"这是一条水平线.\n***\n\n这也是一条水平线.\n---"},{"path":"markdown.html","id":"列表-list","chapter":"3 Markdown","heading":"3.9 列表 (List)","text":"有序列表 (Ordered list)直接使用数字即可语法:Item 1Item 1Item 2Item 2Item 3Item 3无序列表 (Unordered list)无需列表可以使用*或者-来创建.语法:Item 1Item 2\nItem 2.1\nItem 2.2\nItem 2.1Item 2.2Item 3语法:Item 1Item 1Item 2\nItem 2.1\nItem 2.2\nItem 2Item 2.1Item 2.2Item 3Item 3任务列表 (Task list)任务列表 (Task list)有的markdown编辑器是支持任务列表的,比如github,但是有些也不支持.比如rmakdown就是不支持的(本书就是用rmakrdown写的).语法:Write press releaseUpdate websiteContact media","code":"1. Item 1\n2. Item 2\n3. Item 3* Item 1\n* Item 2\n  * Item 2.1\n  * Item 2.2\n* Item 3- Item 1\n- Item 2\n  - Item 2.1\n  - Item 2.2\n- Item 3- [x] Write the press release\n- [ ] Update the website\n- [ ] Contact the media"},{"path":"markdown.html","id":"表格-tables","chapter":"3 Markdown","heading":"3.10 表格 (Tables)","text":"原生态的markdown表格语法非常简单.语法:Rmarkdown可以使用函数来插入表格.DT包语法:knitr包语法:","code":"| First name    | Last name   | Sex  |\n| ------------- |-------------| -----|\n| Xiaotao       |Shen          | Male |\n| Chuchu        | Wang      |   Female |```{r, eval=TRUE}\nlibrary(DT)\nDT::datatable(\n  head(iris, 10),\n  fillContainer = TRUE, \n  options = list(pageLength = 4)\n)\n```\nlibrary(DT)\nDT::datatable(\n  head(iris, 10),\n  fillContainer = TRUE, \n  options = list(pageLength = 4)\n)```{r, eval=TRUE}\nknitr::kable(head(iris), format = 'html')\n```\nknitr::kable(head(iris), format = 'html')"},{"path":"markdown.html","id":"段落","chapter":"3 Markdown","heading":"3.11 段落","text":"markdown中对于段落的控制比较少,如果需要对段落进行修饰,比如对齐,段间距等等,需要使用HTML<p>标签进行设置.对齐对齐是<p>标签中的align属性.左对齐\nMarkdown lightweight markup language plain-text-formatting syntax. design allows converted many output formats, original tool name supports HTML.[9] Markdown often used format readme files, writing messages online discussion forums, create rich text using plain text editor.\n右对齐\nMarkdown lightweight markup language plain-text-formatting syntax. design allows converted many output formats, original tool name supports HTML.[9] Markdown often used format readme files, writing messages online discussion forums, create rich text using plain text editor.\n居中对齐\nMarkdown lightweight markup language plain-text-formatting syntax. design allows converted many output formats, original tool name supports HTML.[9] Markdown often used format readme files, writing messages online discussion forums, create rich text using plain text editor.\n两端对齐\nMarkdown lightweight markup language plain-text-formatting syntax. design allows converted many output formats, original tool name supports HTML.[9] Markdown often used format readme files, writing messages online discussion forums, create rich text using plain text editor.\n行间距使用<p>标签的style属性进行设置.将line-height设置为300%相当于是三倍行距.\nMarkdown lightweight markup language plain-text-formatting syntax. design allows converted many output formats, original tool name supports HTML.[9] Markdown often used format readme files, writing messages online discussion forums, create rich text using plain text editor.\n","code":"<p align = \"left\"> \nMarkdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor.\n<\/p><p align = \"right\"> \nMarkdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor.\n<\/p><p align = \"center\"> \nMarkdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor.\n<\/p><p align = \"justify\"> \nMarkdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor.\n<\/p><p align = \"justify\" style=\"line-height:300%\"> \nMarkdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor.\n<\/p>"},{"path":"markdown.html","id":"插入icon","chapter":"3 Markdown","heading":"3.12 插入icon","text":"可以插入符号工具包Font Awesome.一般的markdown编辑器都已经支持直接使用HTML插入icon.比如插入微信图标:如果不支持,可以在markdown的最底端插入下面的代码:当然也可以使用HTML的<>标签让icon绑定一个超链接.","code":"<i class=\"fa fa-weixin\"><\/i><head> \n    <script defer src=\"https://use.fontawesome.com/releases/v5.0.13/js/all.js\"><\/script> \n    <script defer src=\"https://use.fontawesome.com/releases/v5.0.13/js/v4-shims.js\"><\/script> \n<\/head> \n<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.0.13/css/all.css\"><a href=\"https://www.shenxt.info/files/wechat_QR.jpg\"><i class=\"fa fa-weixin\"><\/i><\/a>"},{"path":"markdown.html","id":"数学公式-equations","chapter":"3 Markdown","heading":"3.13 数学公式 (Equations)","text":"Markdown可以方便插入数学公式.","code":""},{"path":"markdown.html","id":"行内和行外","chapter":"3 Markdown","heading":"3.13.1 行内和行外","text":"如果是将公式插入到行内,使用$公式$.如果是将公式单独出来,使用$$公式$$.","code":""},{"path":"markdown.html","id":"上标和下标","chapter":"3 Markdown","heading":"3.13.2 上标和下标","text":"上标^比如:$x^4$:\\(x^4\\).比如:$x^{42}$:\\(x^{42}\\).下标_比如:$x_2$:\\(x_2\\)","code":""},{"path":"markdown.html","id":"占位符","chapter":"3 Markdown","heading":"3.13.3 占位符","text":"空格单个空格:\\quad.比如:$x\\quady$: \\(x \\quad y\\)两个个空格:\\qquad.比如:$x\\qquady$: \\(x \\qquad y\\)大空格符号:\\比如:$x\\y$:\\(x\\ y\\).中空格符号:\\:比如:$x\\:y$:\\(x\\: y\\).小空格符号:\\,比如:$x\\,y$:\\(x\\, y\\).紧贴符号:\\!比如:$x\\!y$:\\(x\\! y\\).","code":""},{"path":"markdown.html","id":"四则运算","chapter":"3 Markdown","heading":"3.13.4 四则运算","text":"平均数运算符号：\\overline{算式}，如：$\\overline{xyz}$:\\(\\overline{xyz}\\)开二次方运算，符号：\\sqrt，如：$\\sqrt x$:\\(\\sqrt x\\)开二次方运算，符号：\\sqrt，如：$\\sqrt x$:\\(\\sqrt x\\)开方运算，符号：\\sqrt[开方数]{被开方数}，如：$\\sqrt[3]{x+y}$:\\(\\sqrt[3]{x+y}\\)开方运算，符号：\\sqrt[开方数]{被开方数}，如：$\\sqrt[3]{x+y}$:\\(\\sqrt[3]{x+y}\\)对数运算，符号：\\log，如：$\\log(x)$:\\(\\log(x)\\).对数运算，符号：\\log，如：$\\log(x)$:\\(\\log(x)\\).极限运算，符号：\\lim，如：$\\lim^{x \\\\infty}_{y \\0}{\\frac{x}{y}}$:\\(\\lim^{x \\\\infty}_{y \\0}{\\frac{x}{y}}\\)极限运算，符号：\\lim，如：$\\lim^{x \\\\infty}_{y \\0}{\\frac{x}{y}}$:\\(\\lim^{x \\\\infty}_{y \\0}{\\frac{x}{y}}\\)极限运算，符号：\\displaystyle \\lim，如：$\\displaystyle \\lim^{x \\\\infty}_{y \\0}{\\frac{x}{y}}$:\\(\\displaystyle \\lim^{x \\\\infty}_{y \\0}{\\frac{x}{y}}\\)极限运算，符号：\\displaystyle \\lim，如：$\\displaystyle \\lim^{x \\\\infty}_{y \\0}{\\frac{x}{y}}$:\\(\\displaystyle \\lim^{x \\\\infty}_{y \\0}{\\frac{x}{y}}\\)求和运算，符号：\\sum，如：$\\sum^{x \\\\infty}_{y \\0}{\\frac{x}{y}}$:\\(\\sum^{x \\\\infty}_{y \\0}{\\frac{x}{y}}\\)求和运算，符号：\\sum，如：$\\sum^{x \\\\infty}_{y \\0}{\\frac{x}{y}}$:\\(\\sum^{x \\\\infty}_{y \\0}{\\frac{x}{y}}\\)求和运算，符号：\\displaystyle \\sum，如：$\\displaystyle \\sum^{x \\\\infty}_{y \\0}{\\frac{x}{y}}$:\\(\\displaystyle \\sum^{x \\\\infty}_{y \\0}{\\frac{x}{y}}\\)求和运算，符号：\\displaystyle \\sum，如：$\\displaystyle \\sum^{x \\\\infty}_{y \\0}{\\frac{x}{y}}$:\\(\\displaystyle \\sum^{x \\\\infty}_{y \\0}{\\frac{x}{y}}\\)积分运算，符号：\\int，如：$\\int^{\\infty}_{0}{xdx}$:\\(\\int^{\\infty}_{0}{xdx}\\)积分运算，符号：\\int，如：$\\int^{\\infty}_{0}{xdx}$:\\(\\int^{\\infty}_{0}{xdx}\\)积分运算，符号：\\displaystyle \\int，如：$\\displaystyle \\int^{\\infty}_{0}{xdx}$:\\(\\displaystyle \\int^{\\infty}_{0}{xdx}\\)积分运算，符号：\\displaystyle \\int，如：$\\displaystyle \\int^{\\infty}_{0}{xdx}$:\\(\\displaystyle \\int^{\\infty}_{0}{xdx}\\)微分运算，符号：\\partial，如：$\\frac{\\partial x}{\\partial y}$:\\(\\frac{\\partial x}{\\partial y}\\)微分运算，符号：\\partial，如：$\\frac{\\partial x}{\\partial y}$:\\(\\frac{\\partial x}{\\partial y}\\)矩阵表示，符号：\\begin{matrix} \\end{matrix}，如：$\\left[ \\begin{matrix} 1 &2 &\\cdots &4\\5 &6 &\\cdots &8\\\\vdots &\\vdots &\\ddots &\\vdots\\13 &14 &\\cdots &16\\end{matrix} \\right]$\\(\\left[ \\begin{matrix} 1 &2 &\\cdots &4\\5 &6 &\\cdots &8\\\\vdots &\\vdots &\\ddots &\\vdots\\13 &14 &\\cdots &16\\end{matrix} \\right]\\)矩阵表示，符号：\\begin{matrix} \\end{matrix}，如：$\\left[ \\begin{matrix} 1 &2 &\\cdots &4\\5 &6 &\\cdots &8\\\\vdots &\\vdots &\\ddots &\\vdots\\13 &14 &\\cdots &16\\end{matrix} \\right]$\\(\\left[ \\begin{matrix} 1 &2 &\\cdots &4\\5 &6 &\\cdots &8\\\\vdots &\\vdots &\\ddots &\\vdots\\13 &14 &\\cdots &16\\end{matrix} \\right]\\)","code":""},{"path":"markdown.html","id":"集合运算","chapter":"3 Markdown","heading":"3.13.5 集合运算","text":"属于运算，符号：\\，如：$x \\y$\\(x \\y\\)属于运算，符号：\\，如：$x \\y$\\(x \\y\\)不属于运算，符号：\\notin，如：$x \\notin y$:\\(x \\notin y\\)不属于运算，符号：\\notin，如：$x \\notin y$:\\(x \\notin y\\)不属于运算，符号：\\\\，如：$x \\\\y$\\(x \\\\y\\)不属于运算，符号：\\\\，如：$x \\\\y$\\(x \\\\y\\)子集运算，符号：\\subset，如：$x \\subset y$\\(x \\subset y\\)子集运算，符号：\\subset，如：$x \\subset y$\\(x \\subset y\\)子集运算，符号：\\supset，如：$x \\supset y$\\(x \\supset y\\)子集运算，符号：\\supset，如：$x \\supset y$\\(x \\supset y\\)真子集运算，符号：\\subseteq，如：$x \\subseteq y$\\(x \\subseteq y\\)真子集运算，符号：\\subseteq，如：$x \\subseteq y$\\(x \\subseteq y\\)非真子集运算，符号：\\subsetneq，如：$x \\subsetneq y$\\(x \\subsetneq y\\)非真子集运算，符号：\\subsetneq，如：$x \\subsetneq y$\\(x \\subsetneq y\\)真子集运算，符号：\\supseteq，如：$x \\supseteq y$\\(x \\supseteq y\\)真子集运算，符号：\\supseteq，如：$x \\supseteq y$\\(x \\supseteq y\\)非真子集运算，符号：\\supsetneq，如：$x \\supsetneq y$\\(x \\supsetneq y\\)非真子集运算，符号：\\supsetneq，如：$x \\supsetneq y$\\(x \\supsetneq y\\)非子集运算，符号：\\\\subset，如：$x \\\\subset y$\\(x \\\\subset y\\)非子集运算，符号：\\\\subset，如：$x \\\\subset y$\\(x \\\\subset y\\)非子集运算，符号：\\\\supset，如：$x \\\\supset y$\\(x \\\\supset y\\)非子集运算，符号：\\\\supset，如：$x \\\\supset y$\\(x \\\\supset y\\)并集运算，符号：\\cup，如：$x \\cup y$\\(x \\cup y\\)并集运算，符号：\\cup，如：$x \\cup y$\\(x \\cup y\\)交集运算，符号：\\cap，如：$x \\cap y$\\(x \\cap y\\)交集运算，符号：\\cap，如：$x \\cap y$\\(x \\cap y\\)差集运算，符号：\\setminus，如：$x \\setminus y$\\(x \\setminus y\\)差集运算，符号：\\setminus，如：$x \\setminus y$\\(x \\setminus y\\)同或运算，符号：\\bigodot，如：$x \\bigodot y$\\(x \\bigodot y\\)同或运算，符号：\\bigodot，如：$x \\bigodot y$\\(x \\bigodot y\\)同与运算，符号：\\bigotimes，如：$x \\bigotimes y$\\(x \\bigotimes y\\)同与运算，符号：\\bigotimes，如：$x \\bigotimes y$\\(x \\bigotimes y\\)实数集合，符号：\\mathbb{R}，如：$\\mathbb{R}$ \\(\\mathbb{R}\\)实数集合，符号：\\mathbb{R}，如：$\\mathbb{R}$ \\(\\mathbb{R}\\)自然数集合，符号：\\mathbb{Z}，如：$\\mathbb{Z}$ \\(\\mathbb{Z}\\)自然数集合，符号：\\mathbb{Z}，如：$\\mathbb{Z}$ \\(\\mathbb{Z}\\)空集，符号：\\emptyset，如：$\\emptyset$\\(\\emptyset\\)空集，符号：\\emptyset，如：$\\emptyset$\\(\\emptyset\\)","code":""},{"path":"markdown.html","id":"数学符号","chapter":"3 Markdown","heading":"3.13.6 数学符号","text":"无穷，符号：\\infty，如：$\\infty$\\(\\infty\\)无穷，符号：\\infty，如：$\\infty$\\(\\infty\\)虚数，符号：\\imath，如：$\\imath$\\(\\imath\\)虚数，符号：\\imath，如：$\\imath$\\(\\imath\\)虚数，符号：\\jmath，如：$\\jmath$\\(\\jmath\\)虚数，符号：\\jmath，如：$\\jmath$\\(\\jmath\\)数学符号，符号\\hat{}，如：$\\hat{}$\\(\\hat{}\\)数学符号，符号\\hat{}，如：$\\hat{}$\\(\\hat{}\\)数学符号，符号\\check{}，如：$\\check{}$\\(\\check{}\\)数学符号，符号\\check{}，如：$\\check{}$\\(\\check{}\\)数学符号，符号\\breve{}，如：$\\breve{}$\\(\\breve{}\\)数学符号，符号\\breve{}，如：$\\breve{}$\\(\\breve{}\\)数学符号，符号\\tilde{}，如：$\\tilde{}$\\(\\tilde{}\\)数学符号，符号\\tilde{}，如：$\\tilde{}$\\(\\tilde{}\\)数学符号，符号\\bar{}，如：$\\bar{}$\\(\\bar{}\\)数学符号，符号\\bar{}，如：$\\bar{}$\\(\\bar{}\\)矢量符号，符号\\vec{}，如：$\\vec{}$\\(\\vec{}\\)矢量符号，符号\\vec{}，如：$\\vec{}$\\(\\vec{}\\)数学符号，符号\\acute{}，如：$\\acute{}$\\(\\acute{}\\)数学符号，符号\\acute{}，如：$\\acute{}$\\(\\acute{}\\)数学符号，符号\\grave{}，如：$\\grave{}$\\(\\grave{}\\)数学符号，符号\\grave{}，如：$\\grave{}$\\(\\grave{}\\)数学符号，符号\\mathring{}，如：$\\mathring{}$\\(\\mathring{}\\)数学符号，符号\\mathring{}，如：$\\mathring{}$\\(\\mathring{}\\)一阶导数符号，符号\\dot{}，如：$\\dot{}$\\(\\dot{}\\)一阶导数符号，符号\\dot{}，如：$\\dot{}$\\(\\dot{}\\)二阶导数符号，符号\\ddot{}，如：$\\ddot{}$\\(\\ddot{}\\)二阶导数符号，符号\\ddot{}，如：$\\ddot{}$\\(\\ddot{}\\)上箭头，符号：\\uparrow，如：$\\uparrow$\\(\\uparrow\\)上箭头，符号：\\uparrow，如：$\\uparrow$\\(\\uparrow\\)上箭头，符号：\\Uparrow，如：$\\Uparrow$\\(\\Uparrow\\)上箭头，符号：\\Uparrow，如：$\\Uparrow$\\(\\Uparrow\\)下箭头，符号：\\downarrow，如：$\\downarrow$\\(\\downarrow\\)下箭头，符号：\\downarrow，如：$\\downarrow$\\(\\downarrow\\)下箭头，符号：\\Downarrow，如：$\\Downarrow$\\(\\Downarrow\\)下箭头，符号：\\Downarrow，如：$\\Downarrow$\\(\\Downarrow\\)左箭头，符号：\\leftarrow，如：$\\leftarrow$\\(\\leftarrow\\)左箭头，符号：\\leftarrow，如：$\\leftarrow$\\(\\leftarrow\\)左箭头，符号：\\Leftarrow，如：$\\Leftarrow$\\(\\Leftarrow\\)左箭头，符号：\\Leftarrow，如：$\\Leftarrow$\\(\\Leftarrow\\)右箭头，符号：\\rightarrow，如：$\\rightarrow$\\(\\rightarrow\\)右箭头，符号：\\rightarrow，如：$\\rightarrow$\\(\\rightarrow\\)右箭头，符号：\\Rightarrow，如：$\\Rightarrow$\\(\\Rightarrow\\)右箭头，符号：\\Rightarrow，如：$\\Rightarrow$\\(\\Rightarrow\\)底端对齐的省略号，符号：\\ldots，如：$1,2,\\ldots,n$\\(1,2,\\ldots,n\\)底端对齐的省略号，符号：\\ldots，如：$1,2,\\ldots,n$\\(1,2,\\ldots,n\\)中线对齐的省略号，符号：\\cdots，如：$x_1^2 + x_2^2 + \\cdots + x_n^2$\\(x_1^2 + x_2^2 + \\cdots + x_n^2\\)中线对齐的省略号，符号：\\cdots，如：$x_1^2 + x_2^2 + \\cdots + x_n^2$\\(x_1^2 + x_2^2 + \\cdots + x_n^2\\)竖直对齐的省略号，符号：\\vdots，如：$\\vdots$\\(\\vdots\\)竖直对齐的省略号，符号：\\vdots，如：$\\vdots$\\(\\vdots\\)斜对齐的省略号，符号：\\ddots，如：$\\ddots$\\(\\ddots\\)斜对齐的省略号，符号：\\ddots，如：$\\ddots$\\(\\ddots\\)","code":""},{"path":"markdown.html","id":"希腊字母","chapter":"3 Markdown","heading":"3.13.7 希腊字母","text":"","code":""},{"path":"markdown.html","id":"视频-video和音乐-music","chapter":"3 Markdown","heading":"3.14 视频 (Video)和音乐 (music)","text":"原生markdown并不支持视频插入,需要使用HTML语法.一般需要视频网站支持.比如插入youtube视频,需要到youtube视频下方,点击分享按钮,然后点击Embed,会给出内嵌的HTML代码.复制到markdown即可.同理,对于音乐,也需要音乐来源网站支持.比如我们插入网易音乐:","code":"<iframe width=\"100%\" height=\"400\" src=\"https://www.youtube.com/embed/GCmnvXXrpRk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width='100%' height=86 src=\"//music.163.com/outchain/player?type=2&id=85569&auto=1&height=66\"><\/iframe>"},{"path":"markdown.html","id":"markdown编辑器","chapter":"3 Markdown","heading":"3.15 Markdown编辑器","text":"很多编辑器都支持markdown语法, 还有一些专门用于markdown的编辑器.Typora官网如下:https://typora.io/感觉是现在最佳的markdown编辑器.实时渲染.另外还可以导出为PDF等其他格式,非常全能.网易云笔记网易云笔记也支持markdown文件.并且能够在右侧实时显示渲染结果.也非常不错.Atom是github官方出的文本编辑器,并不推荐使用.Rstudio配合Rmarkdown使用非常好.Jupyter notebookPython数据分析的非常好的编辑器.跟typora一样,实时渲染,格式并不是markdown的,但是可以导出为markdown格式.","code":""},{"path":"rmarkdown.html","id":"rmarkdown","chapter":"4 Rmarkdown","heading":"4 Rmarkdown","text":"Rmarkdown是Rstudio公司出品的.所有markdown的语法都支持.但是加入了很多强大的功能,因此可以做更多原生markdown无法完成的任务.成为数据分析以及报告自动化和重复化领域一个非常常用的工具.可以参考下面的书,是rmarkdown的作者Yihui Xie写的.https://bookdown.org/yihui/rmarkdown/installation.html也可以查看这个视频简介.\nR Markdown? RStudio, Inc. Vimeo.\n","code":""},{"path":"rmarkdown.html","id":"安装","chapter":"4 Rmarkdown","heading":"4.1 安装","text":"需要安装R和Rstudio.如果想要转换为PDF格式,需要安装LaTex.","code":"install.packages('rmarkdown')install.packages(\"tinytex\")\ntinytex::install_tinytex()  # install TinyTeX"},{"path":"rmarkdown.html","id":"rmarkdown结构","chapter":"4 Rmarkdown","heading":"4.2 Rmarkdown结构","text":"Rmarkdown可以分为三部分,分别是YAML, 文本部分以及代码块.YAMLYAML在每个rmakdown文件的最开头,定义了Markdown文件的很多性质.YAML是指YAin’t Markup Language, https://en.wikipedia.org/wiki/YAML.YAML用---包围起来.文本部分YAML下面就是文本部分,其实也就是Markdown.代码块在Rmarkdown中,可以插入可以执行的代码块,不近包括R,还包括pyton,SQL等等.上图显示的就是一个完整的Rmarkdown文件.","code":"---\ntitle: \"Hello R Markdown\"\nauthor: \"Awesome Me\"\ndate: \"2018-02-14\"\noutput: html_document\n---"},{"path":"rmarkdown.html","id":"yaml","chapter":"4 Rmarkdown","heading":"4.3 YAML","text":"YAML是在Rmakdown中控制很多内容的部分.通过参数设置,可以控制比如输入格式,输出主题等等.","code":""},{"path":"rmarkdown.html","id":"r代码块","chapter":"4 Rmarkdown","heading":"4.4 R代码块","text":"R代码块的格式为:如何设置格式文件,可以参考下面文章:https://rmarkdown.rstudio.com/articles_docx.html或者看下面的视频:\nCreate MS Word Template R Markdown Yihui Xie Vimeo.\n","code":""},{"path":"rmarkdown_beyond.html","id":"rmarkdown_beyond","chapter":"5 Rmarkdown拓展","heading":"5 Rmarkdown拓展","text":"Yihui Xie以及Rstudio基于Rmarkdown写了好几个用来创建网站等的包.","code":""},{"path":"rmarkdown_beyond.html","id":"blogdown","chapter":"5 Rmarkdown拓展","heading":"5.1 Blogdown","text":"使用基于Rmarkdown的包blogdown可以很方便的创建网站.比如一个个人网站.关于详细的blogdown,可以参考下面的网址:https://bookdown.org/yihui/blogdown/","code":""},{"path":"rmarkdown_beyond.html","id":"需要准备的东西","chapter":"5 Rmarkdown拓展","heading":"5.1.1 需要准备的东西","text":"Rstudio和RRstudio和R本地安装git和一个github账户本地安装git和一个github账户需要确保已经将ssh key pub添加到了github账户中.详细信息可以参考:","code":""},{"path":"rmarkdown_beyond.html","id":"安装-1","chapter":"5 Rmarkdown拓展","heading":"5.1.2 安装","text":"安装blogdown包.在R中.blogdown是基于Hugo的,所以需要安装Hugo.","code":"## Install from CRAN\ninstall.packages('blogdown')blogdown::install_hugo()"},{"path":"rmarkdown_beyond.html","id":"创建项目","chapter":"5 Rmarkdown拓展","heading":"5.1.3 创建项目","text":"推荐使用这个主题:gcushen/hugo-academic也可以使用下面的代码:","code":"\nblogdown::new_site(theme = 'gcushen/hugo-academic')"},{"path":"rmarkdown_beyond.html","id":"预览","chapter":"5 Rmarkdown拓展","heading":"5.1.4 预览","text":"项目建好之后,就会有一个demo的网站在.输入代码预览网站:","code":"\nblogdown:::serve_site()"},{"path":"rmarkdown_beyond.html","id":"使用rstudio-ide来管理网站","chapter":"5 Rmarkdown拓展","heading":"5.1.5 使用Rstudio IDE来管理网站","text":"Rstudio的Addins中有很多的功能可以方便的用来管理网站.当然他们也都有对应的命令行工具.Serve Site:对应着blogdown::serve_site().用来对网站进行build,并进行预览.Serve Site:对应着blogdown::serve_site().用来对网站进行build,并进行预览.New Post:对应着blogdown::new_post(),用来添加新的post.New Post:对应着blogdown::new_post(),用来添加新的post.其他的功能直接可以打开看看,","code":""},{"path":"rmarkdown_beyond.html","id":"更改为其他的主题","chapter":"5 Rmarkdown拓展","heading":"5.1.6 更改为其他的主题","text":"Hugo有很多主题,都是别人已经做好的,可以直接使用.官网如下:https://themes.gohugo.io/找到自己喜欢以及合适的主题之后,找到该主题所在的github用户名和repo名字,然后使用下面的代码进行安装:比如我们使用下面的主题:https://github.com/kakawait/hugo-tranquilpeak-theme最好的办法其实是直接新建一个网站,然后使用那个主题,因为不同的主题的配置等等都是非常不同的.","code":"\nblogdown::install_theme('user.name/repo.name')"},{"path":"rmarkdown_beyond.html","id":"发布自己的网站","chapter":"5 Rmarkdown拓展","heading":"5.1.7 发布自己的网站","text":"在本地创建好自己的网站之后,下面需要做的就是将自己的网站发布在网上,使别人可以通过url看到自己的网站.推荐将网站所有内容托管在github上,然后发布在netlify上.打开netlify网站(https://www.netlify.com/),可以直接使用github账号登陆.生成发布文件输入下列代码:得到下面结果:然后在目录下有public文件夹,说明已经准备好.登陆netlify网站登陆netlify网站,可以使用github账号登陆.然后将public文件夹直接拖动到提示区域即可.然后就会自动发布(deployment).这时候他会自动给一个网址(url),比如https://quirky-austin-f482bf.netlify.com/.绑定github自动发布每次更新之后,我们都需要将public文件夹手动拖动到netlify中,有些麻烦.可以将我们的网站托管在github上,然后将github repo和netlify绑定,从而在每次更新并同步到github之后,让netlify自动更新发布.首先在github上创建和本地仓库同名的远程仓库.然后参考git部分的内容,先创建远程仓库并提交,在terminal中:然后推送到远程仓库:这时候可以看到,本地仓库内容已经被推送到远程仓库了.设置netlify:在netlify,点击Site Setting -> Build&deploy -> Link site git然后按照提示一步步进行即可.另外,需要设置下面内容:hugo版本可以在R中观察.这样,以后再进行改动,然后使用git将其推送到github,netlify就会自动同步并发布.设置自定义域名我们可能需要设置自己的域名.如果没有买域名,那就只能使用netlify而二级域名,二级域名可以进行设置.在site sitting->site information中,点击change site name,就可以设置自己的二级域名.比如我们这里改成ds4omics.netlify.com.如果我们购买了自己的域名,可以在goDaddy购买.然后也可以设置为自己的域名.在netlify主页上,点击Set custom domain.然后填入自己购买的域名,比如shenxt.,然后按照提示一步步进行即可.","code":"\nblogdown::hugo_build()git config user.name\ngit config user.email\ngit init\ngit add .\ngit commit -m 'new website'remote add origin git@github_shenxt:shenxt/ds4omics\ngit remote -v\ngit push -u origin master#第一次推送\nblogdown::hugo_version()"},{"path":"rmarkdown_beyond.html","id":"发布到github上","chapter":"5 Rmarkdown拓展","heading":"5.1.8 发布到github上","text":"也可以将网站发布到github pages上.具体可以参考https://bookdown.org/yihui/blogdown/github-pages.html.下图是我自己的个人博客,也是使用blogdown建立的.","code":""},{"path":"rmarkdown_beyond.html","id":"bookdown","chapter":"5 Rmarkdown拓展","heading":"5.2 Bookdown","text":"","code":""},{"path":"rmarkdown_beyond.html","id":"presentation","chapter":"5 Rmarkdown拓展","heading":"5.3 Presentation","text":"","code":""},{"path":"rmarkdown_beyond.html","id":"pagedown","chapter":"5 Rmarkdown拓展","heading":"5.4 Pagedown","text":"","code":""},{"path":"rmarkdown_beyond.html","id":"pkgdown","chapter":"5 Rmarkdown拓展","heading":"5.5 Pkgdown","text":"","code":""},{"path":"git.html","id":"git","chapter":"6 Git和github","heading":"6 Git和github","text":"git是版本控制系统,而github是开源代码托管平台,提供的是基于git的开源代码托管服务.对于一个团队来说,即使没有github,也可以通过自己搭建git服务器来进行代码的管理,甚至还有一些其他的基于git的代码托管平台使用,比如gitlab,gitee(码云)等.","code":""},{"path":"git.html","id":"安装git","chapter":"6 Git和github","heading":"6.1 安装git","text":"Mac和Linux是默认安装git的,打开terminal,输入git version,如果输出git版本号,则说明已有git.windows安装git可以直接到官网下载,然后安装即可.官网如下:https://git-scm.com/downloads安装结束之后,在开始菜单如果有git bash,则说明安装成功.","code":""},{"path":"git.html","id":"注册github账户","chapter":"6 Git和github","heading":"6.2 注册github账户","text":"打开github官网注册界面https://github.com/join?source=header-home填入自己的账户名,邮箱和密码.选择free plan即可.选择或者填写一些内容.选择或者填写一些内容.验证邮箱验证邮箱","code":""},{"path":"git.html","id":"git基础知识","chapter":"6 Git和github","heading":"6.3 Git基础知识","text":"git是Linux的作者写的.是一个分布式的版本控制软件.主要功能:备份代码.备份代码.版本管理.版本管理.协作办公.协作办公.git的基本概念:工作区(work directory):简单来说就是你的电脑里的目录,也就是某个本地文件夹.仓库(Respository):工作区有一个隐藏目录.git,这个不算是工作区,而是git的仓库,也称之为版本库,这里存储的就是所有代码的版本.暂存区(stage或者index):git的仓库中存放了很多东西,其中最为重要的就是暂存区.远程仓库(remote directory):本地仓库的东西如果需要托管到github上,就需要在github上创建一个仓库(远程仓库),然后将本地仓库和远程仓库联系起来,这样就可以将本地仓库的内容推送到远程仓库.","code":""},{"path":"git.html","id":"git配制","chapter":"6 Git和github","heading":"6.4 Git配制","text":"","code":""},{"path":"git.html","id":"安装git之后需要进行一些全局设置比如用户名邮箱.","chapter":"6 Git和github","heading":"6.4.1 安装git之后,需要进行一些全局设置,比如用户名邮箱.","text":"主要,下面的所有操作,命令,max和linux’是在终端(terminal)中进行的,在windows中,是在git bash中.设置的主要命令是git config:其中,--global是指全局配置,如果不写(或者写为local),则只为当前仓库(repository)配置.如果有多个git用户,这时候需要先确定某个仓库使用的哪个账户.查询全局的git账户信息:如果想要去掉全局用户和邮箱设置.","code":"git config --global user.name \"your name\" \ngit config --global user.email \"your email\" git config user.name\ngit config user.email git config --global user.name\ngit config --global user.email git config --global --unset user_name\ngit config --global --unset user_email"},{"path":"git.html","id":"生成秘钥","chapter":"6 Git和github","heading":"6.4.2 生成秘钥","text":"然后会在~/.ssh/文件夹中会产生秘钥文件,我们只需要将公钥(pub后缀)的内容拷贝到github中即可.对于windows用户,请参考这个帖子:https://www.jianshu.com/p/95262f5eba7a","code":"ssh-keygen -t rsa -C \"shenxt1990@163.com\""},{"path":"git.html","id":"git基本操作","chapter":"6 Git和github","heading":"6.5 Git基本操作","text":"","code":""},{"path":"git.html","id":"创建本地git仓库reop","chapter":"6 Git和github","heading":"6.5.1 创建本地git仓库(reop)","text":"使用git init命令首先,创建一个你要当作仓库的文件夹,然后将其设置为工作路径,然后执行.这时候查看目录结构,就可以看到创建了一个名为.git的子目录,这就说明创建版本库成功了.","code":"mkdir git_test#创建本地文件夹\ncd git_test#进入到该文件夹将其作为工作目录\ngit init#创建本地git仓库ls -la"},{"path":"git.html","id":"将文件添加到版本库","chapter":"6 Git和github","heading":"6.5.2 将文件添加到版本库","text":"要将一个文件纳入到版本管理,首先需要将其添加到暂存区(stage),然后才能提交到仓库中.使用git add命令将文件添加到暂存区:比如我们首先新建一个名为README.md的文件,然后将其添加到暂存区.当然也可以使用下面命令将所有修改添加到暂存区:. 是正则表达式,代表任意文件.但是空文件夹是不会添加到暂存区的.使用git commit命令将暂存区文件提交到仓库中.如果直接使用git commit提交,不带注释信息,则会先弹出评论界面,需要评论.注意这时候是使用vi打开的文件,所以需要掌握一点vi的基础知识.参考下面帖子:https://www.cnblogs.com/itech/archive/2009/04/17/1438439.html简单来说,首先在命令行模式下按下字母i进入插入模式,在该模式下进行信息的输入.输入结束之后,点击ESC退回到命令行模式,然后再输入冒号(:).输入wq,保存文件修改退出vi编辑器.","code":"touch README.md#创建文件\ngit add README.md#将该文件加入到暂存区git add .git commit #如果暂存区有文件,则将其中的文件提交到仓库\ngit commit -m \"your note for this commit\" #用于注明提交的内容,变更等信息,方便溯源"},{"path":"git.html","id":"查看仓库状态","chapter":"6 Git和github","heading":"6.5.3 查看仓库状态","text":"不论我们是新建了文件,将文件加入暂存区,或者是其他修改等,我们都可以使用git status来查看当前的仓库状态.如果当前没有任何变动.如果我们新建了一个文件,然后再次查看状态:因为我们还没有将其添加到暂存区,因此显示该新建文件为 Untracted files将文件放入暂存区,然后再查看状态:然后再将其进行提交,查看状态.","code":""},{"path":"git.html","id":"查看仓库中的具体修改","chapter":"6 Git和github","heading":"6.5.4 查看仓库中的具体修改","text":"如果做过之后修改,我们忘了做了哪些修改,可以使用git diff命令来查看具体修改内容.比如我们在test.txt文件中加入一行,然后查看:可以看到记录了对该文件的修改内容.注意,如果你修改之后已经将其存入暂存区,则git diff不会再显示内容.","code":"git diff #查看所有改动\ngit diff README.md #查看具体文件的改动git diff test.txt"},{"path":"git.html","id":"查看提交的历史记录","chapter":"6 Git和github","heading":"6.5.5 查看提交的历史记录","text":"有的时候,你需要查看自己做过哪些提交(commit),来回顾自己的完成部分,这时候需要使用git log命令.可以看到我们现在一共进行了4次提交,每次提交的第一行commit之后是该次提交的唯一ID.然后后面显示提交者,时间以及一些记录等.如果提交非常多,需要显示内容精简一些,就需要使用git log --pretty=oneline命令.","code":"git log #显示所有提交的历史记录\ngit log --pretty=oneline #单行显示提交历史记录的内容"},{"path":"git.html","id":"版本回退","chapter":"6 Git和github","heading":"6.5.6 版本回退","text":"有了git log来查看提交的历史记录,我们就可以通过git reset --hard来退回到我们需要的某个特定版本.使用git log我们可以看到每个提交都有一个唯一的commit ID,其中上一个也可以使用HEAD代表.因此我们可以退回到上一个版本.比如,我们在最近的一次提交中修改了test.txt,在其中加入一行.我们想退回到上一个版本,不想加入这一行,可以使用下面命令.这时候再查看log,可以看到最近的一个commit已经消失,回到了上一个提交.而上一次的修改也已经消失.","code":"git reset --hard HEAD^ # 回退到上一个提交版本\ngit reset --hard HEAD^^ # 回退到上上一个提交版本\ngit reset --hard 'commit_id' # 会退到 commit_id 指定的提交版本git reset --hard HEAD^"},{"path":"git.html","id":"回到未来某个版本","chapter":"6 Git和github","heading":"6.5.7 回到未来某个版本","text":"退回到原来某个版本之后,如何再回到未来某个版本呢?还是使用git reset --hard命令,但是此时使用git log命令是无法显示在这之后的提交信息的。但是，通过git reflog可以获取到操作命令的历史。这时候只要在使用git reset命令就可以回到未来的任意一个版本了.而且这时候再使用git log也回到了最初的版本提交记录.","code":""},{"path":"git.html","id":"撤销修改","chapter":"6 Git和github","heading":"6.5.8 撤销修改","text":"撤销修改同样包括两方面的内容，由于仓库中的文件在提交(commit)之前，可能在工作区中(也就是还未运行git add命令)，尚未在版本控制范围内，也可能在暂存区中(也就是运行了git add命令但是没有运行git commit命令)。","code":""},{"path":"git.html","id":"丢弃工作区中的文件修改","chapter":"6 Git和github","heading":"6.5.8.1 丢弃工作区中的文件修改","text":"使用如下命令.比如我们再test.txt中添加另外一行,然后不加入暂存区,然后将其丢弃掉.然后运行:","code":"git checkout -- README.md    #如果 README.md 文件在工作区，则丢弃其修改\ngit checkout -- .            #丢弃当前目录下所有工作区中文件的修改git checkout -- test.txt"},{"path":"git.html","id":"丢弃暂存区的修改","chapter":"6 Git和github","heading":"6.5.8.2 丢弃暂存区的修改","text":"如果已经运行了git add将修改放入了暂存区,可以通过下列命令进行丢弃:然后将其删除掉.","code":"git reset HEAD README.md #将 README.md 恢复到 HEAD 提交版本的状态\ngit checkout -- README.md"},{"path":"git.html","id":"删除文件","chapter":"6 Git和github","heading":"6.5.9 删除文件","text":"在文件未添加到暂存区之前,对想删除文件可以直接物理删除.或者通过git checkout -- file来丢弃.如果文件已经被提交,则需要git rm来删除.注意: git rm只能删除已经提交到版本库中的文件.其他状态的文件直接用这个命令操作是出错的.","code":"git rm Readme.md #删除已经提交(commit)过的文件"},{"path":"git.html","id":"git的分支管理","chapter":"6 Git和github","heading":"6.6 git的分支管理","text":"分支管理是版本管理中的重要概念.在进行多个并行作业时,我们经常会用到分支.在这类并行开发的过程中,往往同时存在着多个最新的代码状态.master分支时git默认创建的分支.因此基本上所有的开发都是以这个分支为中心进行的.在不同分支中,可以同时进行不同的作业,等该分支的作业完成之后,再与master分支进行合并.比如下图中,我们首先以master作为模板复制得到feature A的分支.feature A分支主要用来开发另外一个新的特性,等开发完毕之后,再将其合并到master分支中即可.","code":""},{"path":"git.html","id":"查看分支","chapter":"6 Git和github","heading":"6.6.1 查看分支","text":"使用git branch命令查看分支信息.可以看到我们现在只有一个分支,也就是master,然后星号标识的就是当前所在的分支.","code":"git branch        #查看本地分支信息\ngit branch -v     #查看相对详细的本地分支信息\ngit branch -av     #查看包括远程仓库在内的分支信息"},{"path":"git.html","id":"创建分支","chapter":"6 Git和github","heading":"6.6.2 创建分支","text":"使用 git branch new.name用来创建新的分支.需要注意的是,在哪个分支下面新建分支,则该分支就是copy自当前所在的分支.","code":"git branch development ##创建一个新的名字叫做development的分支"},{"path":"git.html","id":"切换分支","chapter":"6 Git和github","heading":"6.6.3 切换分支","text":"使用git checkout命令来切换分支.比如我们先新建一个development的分支,然后切换到该分支下.当然也可以使用下面命令直接创建并切换到新建的分支下.","code":"git branch development\ngit checkout developmentgit checkout -b development"},{"path":"git.html","id":"switch命令","chapter":"6 Git和github","heading":"6.6.4 switch命令","text":"我们注意到切换分支使用git checkout <branch>,而前面讲过的撤销修改则是git checkout -- <file>,同一个命令,有两种作用,确实有点令人迷惑.实际上,切换分支这个动作,用switch更科学。因此，最新版本的Git提供了新的git switch命令来切换分支：创建并切换到新的development分支,可以使用:直接切换到已有分支:我们下面在development分支下面再新建一个development.txt文件,然后写入一些内容.可以看到此时有一个新建的development.txt文件.如果我们切换到master分支,还是有该文件,但是对该文件内容进行修改,则因为没有加入到暂存区,因此并不会进行版本控制.","code":"git switch -c development git switch master"},{"path":"git.html","id":"合并分支merge","chapter":"6 Git和github","heading":"6.6.5 合并分支(merge)","text":"当我们修复完成一个Bug,或者开发完成一个新特性,我们就会把相关的Bug或者特性的上修改合并回原来的主分支上,这时候就需要git merge命令来做分支的合并.首先需要切换回最终需要合并的分支,也就是master分支,然后再合并.","code":"git checkout master   #切换回master分支\ngit merge development #将development分支中的修改合并回master分支"},{"path":"git.html","id":"删除分支","chapter":"6 Git和github","heading":"6.6.6 删除分支","text":"当之前创建的分支,完成了它的使命,如Bug修复完,分支合并以后,这个分支就不在需要了,就可以删除它.如果分支没有合并到master分支中,直接使用上面命令会报错,可以使用下面的命令强制删除.","code":"git branch -d development #删除development分支git branch -D development"},{"path":"git.html","id":"分支提交冲突","chapter":"6 Git和github","heading":"6.6.7 分支提交冲突","text":"如果新创建了一个分支develpment,然后在该分支下对readme.txt进行修改,然后提交.随后然后切换到master分支,然后也对readme.txt进行修改,然后也提交.这样,两个分支分别有了不同的提交.这种情况下,再进行合并就会有冲突.我们合并一下试试:可以看到报错,Git告诉我们,readme.txt文件存在冲突,必须手动解决冲突后再提交.git status也可以告诉我们冲突的文件:这时候我们可以使用vi或者其他工具打开冲突的文件,在这就是readme.txt:Git用<<<<<<<，=======，>>>>>>>标记出不同分支的内容，我们修改如下后保存：我们将这些记号删除,然后保留自己想要保留的修改就可.然后重新提交.这时候就完成了合并.可以删除development分支了.这时候使用git log也可以看到分支的提交情况.使用git log --graph可以观察分支合并图.","code":"![](images/Screen Shot 2020-03-11 at 9.20.30 PM.png)git statusgit add .\ngit commit-m 'remove conflict'"},{"path":"git.html","id":"分支策略","chapter":"6 Git和github","heading":"6.6.8 分支策略","text":"在实际开发中，我们应该按照几个基本原则进行分支管理：首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。","code":""},{"path":"git.html","id":"远程仓库github","chapter":"6 Git和github","heading":"6.7 远程仓库(GitHub)","text":"上面的所有命令都是针对本地仓库的操作.当我们希望多个人来协作时,会将代码发布到一个统一的远程仓库,然后多个人在本地操作以后,再推送到远程仓库.其他人协作时,需要先同步远程仓库的内容,再推送自己的修改.这就要用到了我们最常用的github.","code":""},{"path":"git.html","id":"添加到远程仓库","chapter":"6 Git和github","heading":"6.7.1 添加到远程仓库","text":"比如我们上面所建立的git_test本地仓库,我们需要将其添加到github的远程仓库中.其中your_remote_git_repo是在github中创建的.我们先创建一下,然后进行尝试.格式为git@github.com:user.name/repo_name.\n当然,也可以直接使用远程仓库的网址:https://github.com/jaspershen/git_test","code":"git remote add origin your_remote_git_repo #为本地仓库添加远程仓库"},{"path":"git.html","id":"推送到远程仓库","chapter":"6 Git和github","heading":"6.7.2 推送到远程仓库","text":"使用git push将本地仓库的内容推送到远程仓库.以后再推送的时候,就使用git push就可以了.这时候可以看到github中已经有了内容.","code":"git push -u origin master #第一次推送时使用,可以简化后面的推送或者拉取命令使用\ngit push origin master #将本地master分支推送到origin远程分支,后面之后就可以直接使用该命令推送"},{"path":"git.html","id":"从远程仓库获取最新内容","chapter":"6 Git和github","heading":"6.7.3 从远程仓库获取最新内容","text":"在多人协作过程中,当自己完成了本地仓库中的提交,想要向远程仓库推送前,需要先获取到远程仓库的最新内容。可以通过git fetch和git pull来获取远程仓库的内容.两者之间的区别:git fetch是仅仅获取远程仓库的更新内容,并不会自动做合并.git fetch是仅仅获取远程仓库的更新内容,并不会自动做合并.git pull在获取远程仓库的内容后,会自动做合并,可以看成git fetch之后git merge.所以更推荐这个命令.git pull在获取远程仓库的内容后,会自动做合并,可以看成git fetch之后git merge.所以更推荐这个命令.","code":"git fetch origin master    \ngit pull origin master"},{"path":"git.html","id":"查看远程仓库信息","chapter":"6 Git和github","heading":"6.7.4 查看远程仓库信息","text":"","code":"git remote -v"},{"path":"git.html","id":"从远程仓库克隆","chapter":"6 Git和github","heading":"6.7.5 从远程仓库克隆","text":"如果你本地没有仓库,希望从已有的远程仓库上复制一份代码,那么你需要git clone.","code":"git clone https://github.com/jaspershen/git_test #通过 https 协议,克隆Github上git仓库的源码\ngit clone jaspershen@github.com/git/git_test #通过ssh协议,克隆Github上git仓库的源码"},{"path":"git.html","id":"设置忽略文件","chapter":"6 Git和github","heading":"6.8 设置忽略文件","text":"有时候仓库中的某些文件或者文件夹并不需要进行同步,这时候可以通过设置忽略文件.gitignore进行管理.参考帖子:https://github.com/onlynight/ReadmeDemo/tree/master/Readmes/GitIgnore","code":""},{"path":"git.html","id":"多人协作","chapter":"6 Git和github","heading":"6.9 多人协作","text":"","code":""},{"path":"git.html","id":"创建远程仓库","chapter":"6 Git和github","heading":"6.9.1 创建远程仓库","text":"在github创建远程仓库或者将本地仓库推送到远程仓库.这里就不在演示了.","code":""},{"path":"git.html","id":"本地创建分支并推送到远程仓库","chapter":"6 Git和github","heading":"6.9.2 本地创建分支并推送到远程仓库","text":"比如我们在jaspershen账户上有一个远程仓库test,我们想要跟shenxt一起合作开发这个项目,那么jaspershen需要先创建一个shenxt分支.然后将该分支推送到远程仓库.这时候再去远程仓库就可以看到shenxt分支了.","code":"git branch shenxtgit push origin shenxt"},{"path":"git.html","id":"邀请合作者","chapter":"6 Git和github","heading":"6.9.3 邀请合作者","text":"在github远程仓库的setting中,点击Manage access,然后点击invite collarbortor,填入邀请人的ID即可.这时候邀请人可以在自己github中看到邀请,同意即可.","code":""},{"path":"git.html","id":"合作者参与项目","chapter":"6 Git和github","heading":"6.9.4 合作者参与项目","text":"合作者同意邀请之后,需要克隆项目,创建本地分支.","code":""},{"path":"git.html","id":"克隆项目","chapter":"6 Git和github","heading":"6.9.5 克隆项目","text":"这时候查看分支,会看到只有master分支.所以要创建远程仓库的分支到本地.这时候再查看分支,就会在jaspershen分支了.这时候合作者jaspershen就可以在该分支下进行工作了.","code":"git clone git@github_jaspershen:shenxt/github_test4.git\ncd github_test4git branchgit checkout -b jaspershen origin/jaspershen"},{"path":"git.html","id":"开始工作","chapter":"6 Git和github","heading":"6.9.6 开始工作","text":"这时候合作者jaspershen可以在分支下正常工作,然后提交,合并,并推送到远程仓库.创建文件然后在该文件下写入一行文字:提交然后加入到暂存区并提交.合并分支推送到远程仓库然后可以将其推送到远程分支(包括master和jaspershen分支).注意是直接推送到shenxt账户的远程仓库.这时候就可以在shenxt的远程仓库下看到jaspershen的提交工作了.","code":"touch heloworld.txttest from jaspershengit add helloworld.txt\ngit commit -m \"test from jaspershen\"git checkout master\ngit merge jaspershengit push origin master\ngit push origin jaspershen"},{"path":"git.html","id":"有冲突怎么办","chapter":"6 Git和github","heading":"6.9.7 有冲突怎么办","text":"多人协作是不免会有冲突,冲突的主要原因就是对同一文件的修改,所以最好是提前说好不要对同一个文件进行修改,如果有冲突,请参考:https://www.liaoxuefeng.com/wiki/896043488029600/900004111093344","code":""},{"path":"git.html","id":"抓取分支","chapter":"6 Git和github","heading":"6.9.8 抓取分支","text":"多人协作时，大家都会往master分支上推送各自的修改。如果两个人同时对同一个文件进行了修改,并且同试图推送到master分支,那么就会冲突,报错.这时候,应该先使用git pull命令将最新的提交从origin/master下抓取下来,然后本地合并,解决冲突,再推送.比如我们在shenxt账户下也创建一个helloworld.txt文件.然后提交,推送到远程仓库.会得到下面的报错:我们先使用git pull抓取分支的最新提交.也失败了,因为没有指定本地分支与远程origin/xxx分支的链接，根据提示，设置本地分支和远程分支的链接：然后在pull.这回git pull成功，但是合并有冲突，需要手动解决，解决的方法和分支管理中的解决冲突完全一样。解决后，提交，再push：","code":"git push origin master ! [rejected]        master -> master (fetch first)\nerror: failed to push some refs to 'git@github_shenxt:shenxt/github_test4.git'\nhint: Updates were rejected because the remote contains work that you do\nhint: not have locally. This is usually caused by another repository pushing\nhint: to the same ref. You may want to first integrate the remote changes\nhint: (e.g., 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.git pullgit branch --set-upstream-to=origin/master master\ngit branch --set-upstream-to=origin/jaspershen jaspershen"},{"path":"git.html","id":"多人协作的工作模式","chapter":"6 Git和github","heading":"6.9.9 多人协作的工作模式","text":"首先，可以试图用git push origin <branch-name>推送自己的修改；首先，可以试图用git push origin <branch-name>推送自己的修改；如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；如果合并有冲突，则解决冲突，并在本地提交；如果合并有冲突，则解决冲突，并在本地提交；没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream-<branch-name> origin/<branch-name>。如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream-<branch-name> origin/<branch-name>。这就是多人协作的工作模式，一旦熟悉了，就非常简单。","code":""},{"path":"git.html","id":"how-to-work-together-use-git-and-github-for-metid-for-han","chapter":"6 Git和github","heading":"6.10 How to work together use git and github for metID (for Han)","text":"","code":""},{"path":"git.html","id":"set-up-you-git-and-github","chapter":"6 Git和github","heading":"6.10.1 Set up you git and github","text":"Make sure installed github desktop mac.Open terminal, type code set local git account:set github account, try confirm successful:, set SSH local git github, still terminal:open /ssh folder, see id_rsd.pub. Open file copy content. Go github website, right top concer, cliker picture, select Settings. select SSH GPG keys, click New SSH key. Title, just type name want, paste keys copied id_rsd.pub key area. click Add SSH key.","code":"git config --global user.name your_github_user_name\ngit config --global user.email your_github_user_emailgit config --global user.name\ngit config --global user.email#chang directory\ncd ~/.ssh\nssh-keygen -t rsa -C \"your_github_email\""},{"path":"git.html","id":"accept-the-invitation","chapter":"6 Git和github","heading":"6.10.2 Accept the invitation","text":"send collaborator invitation email Han, receive email please recept inviation.","code":""},{"path":"git.html","id":"git-clone-the-repository","chapter":"6 Git和github","heading":"6.10.3 Git clone the repository","text":"Open terminal, set work directoy want keep metID. type code clone metID repo:change work directory metID folder:check branch:find master branch. chnage hanyah branch:can see branch already:","code":"git clone git@github.com:jaspershen/metID.gitcd metIDgit branchgit checkout -b hanyah origin/hanyahgitbranch"},{"path":"git.html","id":"add-the-repo-into-the-github-desktop","chapter":"6 Git和github","heading":"6.10.4 Add the repo into the github desktop","text":"Open github desktop. open Preferences, sign .click File, select Add Local Repository, choose local metID package mac.Now can use github desktop manage metID repository.","code":""},{"path":"git.html","id":"begin-to-work","chapter":"6 Git和github","heading":"6.10.5 Begin to work","text":"Now please open Rstudio, open metID project. Now can work metID.","code":""},{"path":"git.html","id":"push-your-work-to-github","chapter":"6 Git和github","heading":"6.10.6 Push your work to github","text":"finish file document, can open github desktop, can see changed documents files. please type note summary, click Commit hanyah. push github click Fetch origin.","code":""},{"path":"git_teamwork.html","id":"git_teamwork","chapter":"7 github team work","heading":"7 github team work","text":"","code":""},{"path":"git_teamwork.html","id":"下载github-desktop","chapter":"7 github team work","heading":"7.1 下载github desktop","text":"下载安装并登陆.","code":""},{"path":"git_teamwork.html","id":"fork-repo","chapter":"7 github team work","heading":"7.2 Fork repo","text":"在网页操作","code":""},{"path":"git_teamwork.html","id":"clone-repo到本地","chapter":"7 github team work","heading":"7.3 Clone repo到本地","text":"使用Rstudio操作.打开Rstudio,点击new project, 点击version control,点击git,复制在你github主页的repo地址,然后复制到url栏中,修改地址.点击确定.","code":""},{"path":"git_teamwork.html","id":"确认远程repo","chapter":"7 github team work","heading":"7.4 确认远程repo","text":"","code":"git remote -v"},{"path":"git_teamwork.html","id":"开始工作-1","chapter":"7 github team work","heading":"7.5 开始工作","text":"每次修改之前,请确认本地repo和源repo保持一致.","code":""},{"path":"git_teamwork.html","id":"github-desktop","chapter":"7 github team work","heading":"7.6 github desktop","text":"可以使用github desktop进行.","code":""},{"path":"git_teamwork.html","id":"terminal","chapter":"7 github team work","heading":"7.7 terminal","text":"也可以在terminal中进行.打开Rstudio,左下角选择’Terminal’.然后这时候你可以看到什么发生了改变,如果源repo进行了修改.","code":"git fetch upstream\ngit merge upstream/master"},{"path":"git_teamwork.html","id":"开始修改.","chapter":"7 github team work","heading":"7.8 开始修改.","text":"注意,每次只修改一小部分,就要开始上传.","code":""},{"path":"git_teamwork.html","id":"再次确认源repo是否发生了改变.","chapter":"7 github team work","heading":"7.9 再次确认源repo是否发生了改变.","text":"为了防止在修改期间,源repo也发生了修改,请再次使用上面步骤,同步源repo.","code":""},{"path":"git_teamwork.html","id":"提交","chapter":"7 github team work","heading":"7.10 提交","text":"在github desktop中提交修改.","code":""},{"path":"git_teamwork.html","id":"提交pull-request","chapter":"7 github team work","heading":"7.11 提交pull request","text":"这些是在github网页完成.打开自己的github中的该项目.点击Pull requests点击new pull request点击creat pull request.写下一些记录信息.点击create pull request.","code":""},{"path":"ggplot2.html","id":"ggplot2","chapter":"8 ggplot2","heading":"8 ggplot2","text":"推荐查看作者写的英文书:https://ggplot2-book.org/","code":""},{"path":"ggplot2.html","id":"安装-2","chapter":"8 ggplot2","heading":"8.1 安装","text":"","code":"\ninstall.packages(\"ggplot2\")"},{"path":"ggplot2.html","id":"基础知识","chapter":"8 ggplot2","heading":"8.2 基础知识","text":"","code":""},{"path":"ggplot2.html","id":"ggplot图像的三个元素","chapter":"8 ggplot2","heading":"8.2.1 ggplot图像的三个元素","text":"每个ggplot都有三个元素组成:数据(data)在ggplot2中,数据一般是data frame(数据框).一系列的美学映射(aesthetic mappings),将数据的变量和可视化的特征联系起来.aesthetic mappings,直译为美学映射.也就是将数据的变量使用哪种图形属性进行表示.比如最为简单的一副散点图,我们可以使用x轴来表示身高,使用y轴表示体重,然后使用每个点的颜色代表性别.至少一个图层(layer)用来描述变量如何展示,也就是几何对象(geometric).图层一般使用前缀为geom_的函数进行创建.一个简单的例子:这幅图中:数据为mpg数据为mpg美学映射:displ映射到x轴,hwy映射到y轴.美学映射:displ映射到x轴,hwy映射到y轴.图层:点图.图层:点图.aes()函数的前两个参数默认是x和y.","code":"\nlibrary(ggplot2)\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point()"},{"path":"ggplot2.html","id":"颜色性状大小和其他的美学属性aesthetic-attributes","chapter":"8 ggplot2","heading":"8.2.2 颜色,性状,大小和其他的美学属性(aesthetic attributes)","text":"为了在一幅图中将=映射更多的变量,我们可以使用一些其他的美学属性(aesthetic attributes).比如,颜色,性状还有大小.比如,将颜色映射到变量class上:如果想要将某个美学属性设置为固定值,应当在aes函数之外进行设置:可以看一下这两幅图的差异.","code":"\nggplot(mpg, aes(displ, cty, colour = class)) + \n  geom_point()\nggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = \"blue\"))\nggplot(mpg, aes(displ, hwy)) + geom_point(colour = \"blue\")"},{"path":"ggplot2.html","id":"分面facetting","chapter":"8 ggplot2","heading":"8.2.3 分面(Facetting)","text":"分面也是一种展示分类变量的方法.ggplot2中有两种分面方式:grid和wrapped.其中wrapped.其中wrapped更为重要.需要使用facet_wrap()函数.","code":"\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  facet_wrap(~class)"},{"path":"ggplot2.html","id":"图形的图层geom","chapter":"8 ggplot2","heading":"8.2.4 图形的图层(geom)","text":"图层(geom)就是用来决定变量如何展示在图像上的办法.比如最常见的最简单的点图的图层就是geom_point().geom_smooth: 对数据进行拟合.geom_smooth: 对数据进行拟合.geom_boxplot:箱形图.geom_boxplot:箱形图.geom_histogram:对连续变量分布进行描述.geom_histogram:对连续变量分布进行描述.geom_bar:barplot.geom_bar:barplot.在图中添加smooth曲线","code":"\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  geom_smooth()\n#> `geom_smooth()` using method = 'loess' and formula = 'y ~\n#> x'"},{"path":"ggplot2.html","id":"单独几何对象individual-geoms","chapter":"8 ggplot2","heading":"8.3 单独几何对象(individual geoms)","text":"","code":""},{"path":"ggplot2.html","id":"基础图形","chapter":"8 ggplot2","heading":"8.3.1 基础图形","text":"如何理解几何对象?可以理解为图形的表现方式.我们平时所说的散点图(scatter plot),箱形图(box plot)或者柱状图(bar plot)其实就是指的不同的几何对象表现方式.基础的几何对象都是二维的并且需要x和y轴美学映射.他们也都能够使用颜色(color)和形状(shape)对变量进行映射.geom_area(): 该几何对象用来绘制面积图.线条下面使用颜色进行填充.geom_bar(stat = \"identity\"): 绘制bar plot.注意我们需要将其中的参数stat设置为identify,因此默认情况下,其会统计x轴变量的个数作为y轴.geom_line(): 绘制线形图.将点按照从左到右顺序进行连接.geom_path()函数与geom_line()类似,但是连接线的方式是按照他在数据中的顺序进行连接.geom_point()用来画散点图.所以可以对点设置shape属性.geom_polygon(),该函数用来绘制多边形.多边形的每个顶点都需要数据中的单独一行来定义.geom_rect(),geom_title()和geom_raster()用来绘制长方形(rectangles).其中,geom_rect()使用四个参数来确定长方形的四个角(xmin,xmax,ymin和ymax).geom_title()和geom_rect()几乎相同,但是使用参数x和y来定义每个长方形的中心,然后使用width和height来定义每个长方形的宽度和高度.geom_raster()和geom_title()几乎相同.如果每个长方形的大小都是一致的,那么更推荐使用它,因为速度会快一些.","code":"\ndf <- data.frame(\n  x = c(3, 1, 5), \n  y = c(2, 4, 6), \n  label = c(\"a\",\"b\",\"c\")\n)\np <- ggplot(df, aes(x, y, label = label)) + \n  labs(x = NULL, y = NULL) + # Hide axis label\n  theme(plot.title = element_text(size = 12)) # Shrink plot title\np + geom_area() + ggtitle(\"area\")\np + geom_bar(stat = 'identity') + ggtitle(\"bar\")\np + geom_line() + ggtitle(\"line\")\np + geom_path() + ggtitle(\"path\")\np + geom_point() + ggtitle(\"point\")\np + geom_polygon() + ggtitle(\"polygon\")\np + geom_tile() + ggtitle(\"raster\")"},{"path":"ggplot2.html","id":"复杂几何对象collective-geoms","chapter":"8 ggplot2","heading":"8.4 复杂几何对象(collective geoms)","text":"不知道这个怎么翻译比较恰当.所有的集合对象(geom)都可以简单粗略的分为简单对象和复杂几何对象.对于简单的集合对象来说,数据的每一个观测(也就是一行),只画成一个独立的图形.比如对于散点图,每一行数据,只画一个点.而一个复杂的几何对象(collective geom)则使用几行数据来画出一个图形.这有可能是因为统计,比如boxplot,很多点才画出一个box.也有可能是图像的显示方式决定的,比如对于多边形,只有几个点才能确定一个多边形.下面的例子我们使用nlme package的Oxboys数据进行演示.","code":"\ndata(Oxboys, package = \"nlme\")\nhead(Oxboys)\n#> Grouped Data: height ~ age | Subject\n#>   Subject     age height Occasion\n#> 1       1 -1.0000  140.5        1\n#> 2       1 -0.7479  143.4        2\n#> 3       1 -0.4630  144.8        3\n#> 4       1 -0.1643  147.1        4\n#> 5       1 -0.0027  147.7        5\n#> 6       1  0.2466  150.2        6"},{"path":"ggplot2.html","id":"多个组一个美学属性aesthetic","chapter":"8 ggplot2","heading":"8.4.1 多个组一个美学属性(aesthetic)","text":"有时候,我们希望将数据分成不同的组别进行画图.但是画出的图都是同样的美学属性.也就是说,你希望对每一个对象进行单独画图.这在一些longitudinal研究中非常常见.比如我们想要看每一个男孩随着时间身高的变化:每一条线代表一个男孩,一个对象.如果我们不适用group参数进行设置,那么出来的结果就是下面这样:另外还有一个比较有用的参数,如果对于对象并没有一个单独的group进行定义,那么就可以使用interaction()函数进行定义,比如:aes(group = interaction(school_id, student_id)).","code":"\nggplot(Oxboys, aes(age, height, group = Subject)) + \n  geom_point() + \n  geom_line()\nggplot(Oxboys, aes(age, height)) + \n  geom_point() + \n  geom_line()"},{"path":"ggplot2.html","id":"多组并且多个图层layer","chapter":"8 ggplot2","heading":"8.4.2 多组并且多个图层(layer)","text":"有时候我们还想对每个对象单独画图,但是需要对整体进行总结.这时候我们就需要知道怎么在ggplot2中设置整体数据(global)和特殊数据(specific data).我们看到,我们都需要使用ggplot()参数来创建一个ggplot2图像,在ggplot()函数中设置的数据和参数称之为整体数据和整体参数,这些数据会在所有的图层中都使用.如果想要在不同的图层中使用不同的数据和参数,那么就需要在不同的图层或者说集合对象中设置数据和参数.","code":"\nggplot(Oxboys, aes(age, height)) + \n  geom_line(aes(group = Subject)) + \n  geom_smooth(method = \"lm\", size = 2, se = FALSE)\n#> `geom_smooth()` using formula = 'y ~ x'"},{"path":"ggplot2.html","id":"覆盖默认分组","chapter":"8 ggplot2","heading":"8.5 覆盖默认分组","text":"有一些图形的横坐标为非连续变量,但是我们仍然想要画一条线将他们连接起来.比如对于boxplot:横坐标是非连续变量,如果我们想使用一条线将所有的人都连接起来该怎么做呢?可以看到上面并不是我们想要的结果,如果想要得到我们想要的结果,需要在geom_line()函数中再次单独定义group.上面是我们想要的结果.","code":"\nggplot(Oxboys, aes(Occasion, height)) + \n  geom_boxplot()\nggplot(Oxboys, aes(Occasion, height)) + \n  geom_boxplot() +\n  geom_line(colour = \"#3366FF\", alpha = 0.5)\nggplot(Oxboys, aes(Occasion, height)) + \n  geom_boxplot() +\n  geom_line(aes(group = Subject), colour = \"#3366FF\", alpha = 0.5)"},{"path":"ggplot2.html","id":"将美学属性match到图形对象上","chapter":"8 ggplot2","heading":"8.5.1 将美学属性match到图形对象上","text":"这幅图中,colour是非连续变量.第一个点和第一条线是红色的.第二条线和第二个点事绿色的,第三个点(没有对应的线)则是蓝色的.这幅图中colour是连续的.","code":"\ndf <- data.frame(x = 1:3,\n                 y = 1:3,\n                 colour = c(1, 3, 5))\nggplot(df, aes(x, y, colour = factor(colour))) +\n  geom_line(aes(group = 1), size = 2) +\n  geom_point(size = 5)\nggplot(df, aes(x, y, colour = colour)) +\n  geom_line(aes(group = 1), size = 2) +\n  geom_point(size = 5)"},{"path":"network.html","id":"network","chapter":"9 Network分析总结","heading":"9 Network分析总结","text":"significant applications demonstrated chapter.","code":""},{"path":"network.html","id":"example-one","chapter":"9 Network分析总结","heading":"9.1 Example one","text":"","code":""},{"path":"network.html","id":"example-two","chapter":"9 Network分析总结","heading":"9.2 Example two","text":"","code":""},{"path":"tidyverse_stringr.html","id":"tidyverse_stringr","chapter":"10 Tidyverse用于数据分析stringr","heading":"10 Tidyverse用于数据分析stringr","text":"stringr是R中进行文本处理的包.cheatsheet可以看这里.https://github.com/rstudio/cheatsheets/blob/master/strings.pdf","code":""},{"path":"tidyverse_stringr.html","id":"安装-3","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.1 安装","text":"","code":"\n# Install the released version from CRAN:\ninstall.packages(\"stringr\")\n\n# Install the cutting edge development version from GitHub:\n# install.packages(\"devtools\")\ndevtools::install_github(\"tidyverse/stringr\")"},{"path":"tidyverse_stringr.html","id":"rstudio-addin","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.2 Rstudio Addin","text":"使用Rstudio Addin,可以很方便的使用正则表达式.需要安装一个包:安装结束之后,可以在Addins中找到.","code":"\nif(!require(remotes)){\n  install.packages(\"remotes\")\n}\nif(!require(regexplain)){\nremotes::install_github(\"gadenbuie/regexplain\")\n}"},{"path":"tidyverse_stringr.html","id":"pattern-matching","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.3 Pattern matching","text":"","code":""},{"path":"tidyverse_stringr.html","id":"计算一个文本中符合要求的数目","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.3.1 计算一个文本中符合要求的数目","text":"使用str_count()函数:比如要统计某个单词中某个字母的个数:其中第二个参数pattern是支持正则表达式的.","code":"\nlibrary(stringr)\nlibrary(regexplain)\nfruit <- c(\"apple\", \"banana\", \"pear\", \"pineapple\")\nstr_count(fruit, \"a\")\n#> [1] 1 3 1 1\n\nstr_count(fruit, c(\"a\", \"b\", \"p\", \"p\"))\n#> [1] 1 1 1 3"},{"path":"tidyverse_stringr.html","id":"判断一个文本中是否存在一个pattern","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.3.2 判断一个文本中是否存在一个pattern","text":"使用str_detect()函数.其中negate是在stringr中的很多函数都有的一个参数,如果设置为TRUE,就会返回没有match到的内容.","code":"\nstr_detect(string, pattern, negate = FALSE)\nfruit <- c(\"apple\", \"banana\", \"pear\", \"pinapple\")\nstr_detect(fruit, \"a\")\n#> [1] TRUE TRUE TRUE TRUE"},{"path":"tidyverse_stringr.html","id":"从文本中提取pattern","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.3.3 从文本中提取pattern","text":"有两个函数,str_extract和str_extract_all.用法如下:从文本中提取符合要求的文本.例子:\\\\d是一种正则表达式的写法,代表任意数字.上面的代码代表我们想要从每个文本中提取所有的数字.如果没有数字,那么就会返回NA.[-z]+代表任意一个小写字母,然后重复1次或者多次.\\\\b代表字符的边界.\\\\b[-z]{1,4}\\\\b代表一个字符的边界+重复1-4次的任意小写字母+一个字符的边界.可以看到,只会提取出第一个字母.如果想要把一个字符的所有符合要求的pattern都提取出来,可以使用str_extract_all.可以看到,这时候得到的就是一个和string同样长度的list.会把每个string中的符合要求的pattern都提取出来.我们注意到str_extract_all()有一个参数:simplify,它能够将返回的结果变为一个matrix:","code":"\nstr_extract(string, pattern)\nstr_extract_all(string, pattern, simplify = FALSE)\nshopping_list <- c(\"apples x4\", \"bag of flour\", \"bag of sugar\", \"milk x2\")\nstr_extract(shopping_list, \"\\\\d\")\n#> [1] \"4\" NA  NA  \"2\"\nshopping_list <- c(\"apples x4\", \"bag of flour\", \"bag of sugar\", \"milk x2\")\nstr_extract(shopping_list, \"[a-z]+\")\n#> [1] \"apples\" \"bag\"    \"bag\"    \"milk\"\nshopping_list <- c(\"apples x4\", \"bag of flour\", \"bag of sugar\", \"milk x2\")\nstr_extract(shopping_list, \"\\\\b[a-z]{1,4}\\\\b\")\n#> [1] NA     \"bag\"  \"bag\"  \"milk\"\nshopping_list <- c(\"apples x4\", \"bag of flour\", \"bag of sugar\", \"milk x2\")\nstr_extract_all(shopping_list, \"[a-z]+\")\n#> [[1]]\n#> [1] \"apples\" \"x\"     \n#> \n#> [[2]]\n#> [1] \"bag\"   \"of\"    \"flour\"\n#> \n#> [[3]]\n#> [1] \"bag\"   \"of\"    \"sugar\"\n#> \n#> [[4]]\n#> [1] \"milk\" \"x\"\nstr_extract_all(shopping_list, \"\\\\b[a-z]+\\\\b\")\n#> [[1]]\n#> [1] \"apples\"\n#> \n#> [[2]]\n#> [1] \"bag\"   \"of\"    \"flour\"\n#> \n#> [[3]]\n#> [1] \"bag\"   \"of\"    \"sugar\"\n#> \n#> [[4]]\n#> [1] \"milk\"\nstr_extract_all(shopping_list, \"\\\\d\")\n#> [[1]]\n#> [1] \"4\"\n#> \n#> [[2]]\n#> character(0)\n#> \n#> [[3]]\n#> character(0)\n#> \n#> [[4]]\n#> [1] \"2\"\nshopping_list <- c(\"apples x4\", \"bag of flour\", \"bag of sugar\", \"milk x2\")\nstr_extract_all(shopping_list, \"[a-z]+\", simplify = TRUE)\n#>      [,1]     [,2] [,3]   \n#> [1,] \"apples\" \"x\"  \"\"     \n#> [2,] \"bag\"    \"of\" \"flour\"\n#> [3,] \"bag\"    \"of\" \"sugar\"\n#> [4,] \"milk\"   \"x\"  \"\"\nstr_extract_all(shopping_list, \"\\\\b[a-z]+\\\\b\", simplify = TRUE)\n#>      [,1]     [,2] [,3]   \n#> [1,] \"apples\" \"\"   \"\"     \n#> [2,] \"bag\"    \"of\" \"flour\"\n#> [3,] \"bag\"    \"of\" \"sugar\"\n#> [4,] \"milk\"   \"\"   \"\"\nstr_extract_all(shopping_list, \"\\\\d\", simplify = TRUE)\n#>      [,1]\n#> [1,] \"4\" \n#> [2,] \"\"  \n#> [3,] \"\"  \n#> [4,] \"2\""},{"path":"tidyverse_stringr.html","id":"确定某个pattern在文本中的位置","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.3.4 确定某个pattern在文本中的位置","text":"两个函数:例子:$代表以某个东西结尾.然后我们再查找字母a在所有字符中的位置.如果没有符合要求的pattern,则会返回NA.也可以设置pattern为一个长度和string相同的vector.如果想要查找所有符合要求的pattern的位置,要使用str_locate_all()函数:返回是一个list.","code":"\nstr_locate(string, pattern)\nstr_locate_all(string, pattern)\nfruit <- c(\"apple\", \"banana\", \"pear\", \"pineapple\")\nstr_locate(fruit, \"$\")\nstr_locate(fruit, \"a\")\nstr_locate(fruit, \"e\")\nstr_locate(fruit, c(\"a\", \"b\", \"p\", \"p\"))\nstr_locate(fruit, \"a\")\nstr_locate_all(fruit, \"a\")"},{"path":"tidyverse_stringr.html","id":"从文本中提取extract匹配到的group","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.3.5 从文本中提取(extract)匹配到的group","text":"函数为:这两个函数跟str_extract()有些类似.例子:phone代表符合电话号码的格式:第一个group: 小括号括起来的,数字2-9其中一个,重复一次(后面没有限定数量,则代表重复一次);数字0-9.重复两次. 然后中间是-或者空格,或者任意一个字符.第一个group: 小括号括起来的,数字2-9其中一个,重复一次(后面没有限定数量,则代表重复一次);数字0-9.重复两次. 然后中间是-或者空格,或者任意一个字符.group 2: 小括号括起来的.0-9任意数字重复三次.然后中间是-或者空格,或者任意一个字符.group 2: 小括号括起来的.0-9任意数字重复三次.然后中间是-或者空格,或者任意一个字符.group 3: 小括号括起来的.0-9任意数字重复四次.group 3: 小括号括起来的.0-9任意数字重复四次.这时候我们试试使用str_match()函数:可以看到,除了将整体pattern匹配出来之后,还将每个group(也就是括号括起来的部分)分别匹配出来了.另外一个例子:<(.*?)>其中的*?是贪婪用法,表示重复任意次,但尽可能少重复.请参考这一章正则表达式.","code":"\nstr_match(string, pattern)\nstr_match_all(string, pattern)\nstrings <- c(\" 219 733 8965\", \"329-293-8753 \", \"banana\", \"595 794 7569\",\n  \"387 287 6718\", \"apple\", \"233.398.9187  \", \"482 952 3315\",\n  \"239 923 8115 and 842 566 4692\", \"Work: 579-499-7527\", \"$1000\",\n  \"Home: 543.355.3679\")\nphone <- \"([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})\"\nstr_extract(strings, phone)\n#>  [1] \"219 733 8965\" \"329-293-8753\" NA            \n#>  [4] \"595 794 7569\" \"387 287 6718\" NA            \n#>  [7] \"233.398.9187\" \"482 952 3315\" \"239 923 8115\"\n#> [10] \"579-499-7527\" NA             \"543.355.3679\"\nstr_match(strings, phone)\n#>       [,1]           [,2]  [,3]  [,4]  \n#>  [1,] \"219 733 8965\" \"219\" \"733\" \"8965\"\n#>  [2,] \"329-293-8753\" \"329\" \"293\" \"8753\"\n#>  [3,] NA             NA    NA    NA    \n#>  [4,] \"595 794 7569\" \"595\" \"794\" \"7569\"\n#>  [5,] \"387 287 6718\" \"387\" \"287\" \"6718\"\n#>  [6,] NA             NA    NA    NA    \n#>  [7,] \"233.398.9187\" \"233\" \"398\" \"9187\"\n#>  [8,] \"482 952 3315\" \"482\" \"952\" \"3315\"\n#>  [9,] \"239 923 8115\" \"239\" \"923\" \"8115\"\n#> [10,] \"579-499-7527\" \"579\" \"499\" \"7527\"\n#> [11,] NA             NA    NA    NA    \n#> [12,] \"543.355.3679\" \"543\" \"355\" \"3679\"\nstr_extract_all(strings, phone)\n#> [[1]]\n#> [1] \"219 733 8965\"\n#> \n#> [[2]]\n#> [1] \"329-293-8753\"\n#> \n#> [[3]]\n#> character(0)\n#> \n#> [[4]]\n#> [1] \"595 794 7569\"\n#> \n#> [[5]]\n#> [1] \"387 287 6718\"\n#> \n#> [[6]]\n#> character(0)\n#> \n#> [[7]]\n#> [1] \"233.398.9187\"\n#> \n#> [[8]]\n#> [1] \"482 952 3315\"\n#> \n#> [[9]]\n#> [1] \"239 923 8115\" \"842 566 4692\"\n#> \n#> [[10]]\n#> [1] \"579-499-7527\"\n#> \n#> [[11]]\n#> character(0)\n#> \n#> [[12]]\n#> [1] \"543.355.3679\"\nstr_match_all(strings, phone)\n#> [[1]]\n#>      [,1]           [,2]  [,3]  [,4]  \n#> [1,] \"219 733 8965\" \"219\" \"733\" \"8965\"\n#> \n#> [[2]]\n#>      [,1]           [,2]  [,3]  [,4]  \n#> [1,] \"329-293-8753\" \"329\" \"293\" \"8753\"\n#> \n#> [[3]]\n#>      [,1] [,2] [,3] [,4]\n#> \n#> [[4]]\n#>      [,1]           [,2]  [,3]  [,4]  \n#> [1,] \"595 794 7569\" \"595\" \"794\" \"7569\"\n#> \n#> [[5]]\n#>      [,1]           [,2]  [,3]  [,4]  \n#> [1,] \"387 287 6718\" \"387\" \"287\" \"6718\"\n#> \n#> [[6]]\n#>      [,1] [,2] [,3] [,4]\n#> \n#> [[7]]\n#>      [,1]           [,2]  [,3]  [,4]  \n#> [1,] \"233.398.9187\" \"233\" \"398\" \"9187\"\n#> \n#> [[8]]\n#>      [,1]           [,2]  [,3]  [,4]  \n#> [1,] \"482 952 3315\" \"482\" \"952\" \"3315\"\n#> \n#> [[9]]\n#>      [,1]           [,2]  [,3]  [,4]  \n#> [1,] \"239 923 8115\" \"239\" \"923\" \"8115\"\n#> [2,] \"842 566 4692\" \"842\" \"566\" \"4692\"\n#> \n#> [[10]]\n#>      [,1]           [,2]  [,3]  [,4]  \n#> [1,] \"579-499-7527\" \"579\" \"499\" \"7527\"\n#> \n#> [[11]]\n#>      [,1] [,2] [,3] [,4]\n#> \n#> [[12]]\n#>      [,1]           [,2]  [,3]  [,4]  \n#> [1,] \"543.355.3679\" \"543\" \"355\" \"3679\"\nx <- c(\"<a> <b>\", \"<a> <>\", \"<a>\", \"\", NA)\nstr_match(x, \"<(.*?)> <(.*?)>\")\n#>      [,1]      [,2] [,3]\n#> [1,] \"<a> <b>\" \"a\"  \"b\" \n#> [2,] \"<a> <>\"  \"a\"  \"\"  \n#> [3,] NA        NA   NA  \n#> [4,] NA        NA   NA  \n#> [5,] NA        NA   NA\nstr_match_all(x, \"<(.*?)>\")\n#> [[1]]\n#>      [,1]  [,2]\n#> [1,] \"<a>\" \"a\" \n#> [2,] \"<b>\" \"b\" \n#> \n#> [[2]]\n#>      [,1]  [,2]\n#> [1,] \"<a>\" \"a\" \n#> [2,] \"<>\"  \"\"  \n#> \n#> [[3]]\n#>      [,1]  [,2]\n#> [1,] \"<a>\" \"a\" \n#> \n#> [[4]]\n#>      [,1] [,2]\n#> \n#> [[5]]\n#>      [,1] [,2]\n#> [1,] NA   NA\nstr_extract(x, \"<.*?>\")\n#> [1] \"<a>\" \"<a>\" \"<a>\" NA    NA\nstr_extract_all(x, \"<.*?>\")\n#> [[1]]\n#> [1] \"<a>\" \"<b>\"\n#> \n#> [[2]]\n#> [1] \"<a>\" \"<>\" \n#> \n#> [[3]]\n#> [1] \"<a>\"\n#> \n#> [[4]]\n#> character(0)\n#> \n#> [[5]]\n#> [1] NA"},{"path":"tidyverse_stringr.html","id":"从文本中去除匹配到的pattern","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.3.6 从文本中去除匹配到的pattern","text":"函数:与str_replace用法作用一致.但是str_replace可以替换成其他pattern.例子:","code":"\nstr_remove(string, pattern)\nstr_remove_all(string, pattern)\nfruits <- c(\"one apple\", \"two pears\", \"three bananas\")\nstr_remove(fruits, \"[aeiou]\")\n#> [1] \"ne apple\"     \"tw pears\"     \"thre bananas\"\nstr_remove_all(fruits, \"[aeiou]\")\n#> [1] \"n ppl\"    \"tw prs\"   \"thr bnns\""},{"path":"tidyverse_stringr.html","id":"从文本中替换匹配到的pattern","chapter":"10 Tidyverse用于数据分析stringr","heading":"10.3.7 从文本中替换匹配到的pattern","text":"函数:例子:从这个例子可以看出来,replacement也可以是一个函数,将匹配到的所有pattern使用该函数转换之后替换.","code":"\nstr_replace(string, pattern, replacement)\nstr_replace_all(string, pattern, replacement)\nfruits <- c(\"one apple\", \"two pears\", \"three bananas\")\nstr_replace(fruits, \"[aeiou]\", \"-\")\n#> [1] \"-ne apple\"     \"tw- pears\"     \"thr-e bananas\"\nstr_replace_all(fruits, \"[aeiou]\", \"-\")\n#> [1] \"-n- -ppl-\"     \"tw- p--rs\"     \"thr-- b-n-n-s\"\nstr_replace_all(fruits, \"[aeiou]\", toupper)\n#> [1] \"OnE ApplE\"     \"twO pEArs\"     \"thrEE bAnAnAs\"\nstr_replace_all(fruits, \"b\", NA_character_)\n#> [1] \"one apple\" \"two pears\" NA\nstr_replace(fruits, \"([aeiou])\", \"\\\\1\\\\1\")\n#> [1] \"oone apple\"     \"twoo pears\"     \"threee bananas\""},{"path":"tidyverse_purrr.html","id":"tidyverse_purrr","chapter":"11 功能化函数编程purrr","heading":"11 功能化函数编程purrr","text":"purrr是R进行函数化编程(functional programing)的包.","code":""},{"path":"tidyverse_purrr.html","id":"安装-4","chapter":"11 功能化函数编程purrr","heading":"11.1 安装","text":"purrr包在tidyverse包中,所以可以直接通过安装tidyverse包进行安装.当然,也可以单独安装.","code":"\n# The easiest way to get purrr is to install the whole tidyverse:\ninstall.packages(\"tidyverse\")\n\n# Alternatively, install just purrr:\ninstall.packages(\"purrr\")\n\n# Or the the development version from GitHub:\n# install.packages(\"devtools\")\ndevtools::install_github(\"tidyverse/purrr\")"},{"path":"tidyverse_purrr.html","id":"map函数系列","chapter":"11 功能化函数编程purrr","heading":"11.2 map函数系列","text":"purrr包提供了很多map系列的函数,跟R的base apply家族函数有点像,都是对向量化的对象的每一个元素进行处理.map(.x, .f),其中.x是向量化的对象,比如向量,list等,然后对每一个元素使用.f函数进行处理,得到结果之后会返回一个跟原来.x长度相同的对象.返回对象的格式跟map函数的后缀有关,比如_lgl,_chr()等.在R中,向量包括两类,atomic和list,二者区别在于前者的元素类型必须相同,而后者可以不同,前者的代表为向量和矩阵,而后者为list和数据框.比如map()函数,用法如下:.x是第一个参数,是一个list或者一个atomic vector..f是一个函数,一个公式或者是向量....则是函数的其他参数.我们举个例子:这时候.x是一个向量.函数是rnorm.如果不对函数进行特别说明,则向量的每个元素默认都是函数的第一个参数,然后后面的参数是其他参数.如果在后面对第一参数进行设置,这时候前面的向量则按顺序向后移动.比如:这时候,因为在后面设置了n = 3,因此这时候向量就是rnorm的第二个参数mean了.对于比较复杂的参数,不太推荐这样的写法,更推荐使用匿名函数,然后将参数位置进行固定:当然,也可以是一个公式:这时候参数需要使用.x作为占位符.对于数据框来说,其实也可以看做是一个list,每一列就是一个list中的一个元素.也可以做一些复杂的运算,比如进行scale.从上面的可以看到,使用map函数,最后返回的结果毕竟是一个list.如果想要返回其他的类型呢?这时候需要使用map_加上后缀名的函数,在purrr中一共有以下几种:map_lgl(), map_int(), map_dbl()和map_chr()返回的分别是logical,integer,dbl和character类型的数据.另外,函数还可以是一个列名或者向量某个元素的名字,也就是使用位置参数对其进行提取.比如上面的例子,就是使用函数””,也就是提取对象中名字为””的元素的名字,其实也就是函数[[,如果没有该元素,则使用函数.default的值进行填充.当然,还可以使用位置来进行提取.所以,可以看出来,其实这几个函数都是在map的基础上对返回的数值进行一定的修饰得到不同类型结果而已.map_dfr()和map_dfc()函数.这两个函数其实就是将map()返回的list对象整理为data frame对象.分别按照行和列进行整合.举个例子:walk()函数,称之为游走函数当使用函数的目的是向屏幕提供输出或将文件保存到磁盘——重要的是操作过程而不是返回值，我们应该使用游走函数，而不是映射函数。比如最简单的例子:另外一种是保存文件到本地.这时候就可以使用walk函数.","code":"\nmap(.x, .f, ...)\nlibrary(tidyverse)\n#> ── Attaching core tidyverse packages ──── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n1:3 %>%\n  map(rnorm, mean = 3)\n#> [[1]]\n#> [1] 4.091689\n#> \n#> [[2]]\n#> [1] 2.421059 4.753699\n#> \n#> [[3]]\n#> [1] 3.600798 3.470027 1.490179\n1:3 %>%\n  map(rnorm, n = 3)\n#> [[1]]\n#> [1] 0.5318611 1.7728080 2.8020710\n#> \n#> [[2]]\n#> [1] 1.503078 1.265108 1.206609\n#> \n#> [[3]]\n#> [1] 2.956641 3.431411 2.308549\nmap(.x = 1:3, .f = function(x) {rnorm(n = 3, mean = x)})\n#> [[1]]\n#> [1] -0.3011655  1.1711510  1.1889051\n#> \n#> [[2]]\n#> [1] 3.733329 1.705238 1.799918\n#> \n#> [[3]]\n#> [1] 2.931826 4.108102 2.611456\nmap(.x = 1:3, ~ rnorm(n = 3, mean = .x))\n#> [[1]]\n#> [1] 2.069497 3.040783 1.814557\n#> \n#> [[2]]\n#> [1]  3.1034905 -0.2086491  0.5570305\n#> \n#> [[3]]\n#> [1] 2.321412 3.709581 3.655788\ndf <- matrix(1:16, nrow = 4) %>% \n  as.data.frame()\ndf\n#>   V1 V2 V3 V4\n#> 1  1  5  9 13\n#> 2  2  6 10 14\n#> 3  3  7 11 15\n#> 4  4  8 12 16\nmap(.x = df, .f = mean)\n#> $V1\n#> [1] 2.5\n#> \n#> $V2\n#> [1] 6.5\n#> \n#> $V3\n#> [1] 10.5\n#> \n#> $V4\n#> [1] 14.5\ndf <- matrix(1:16, nrow = 4) %>% \n  as.data.frame()\ndf\n#>   V1 V2 V3 V4\n#> 1  1  5  9 13\n#> 2  2  6 10 14\n#> 3  3  7 11 15\n#> 4  4  8 12 16\nmap(.x = df, .f = function(x) {(x - mean(x)) / sd(x)})\n#> $V1\n#> [1] -1.1618950 -0.3872983  0.3872983  1.1618950\n#> \n#> $V2\n#> [1] -1.1618950 -0.3872983  0.3872983  1.1618950\n#> \n#> $V3\n#> [1] -1.1618950 -0.3872983  0.3872983  1.1618950\n#> \n#> $V4\n#> [1] -1.1618950 -0.3872983  0.3872983  1.1618950\nset_names(c(\"foo\", \"bar\")) %>% map(paste0, \":suffix\")\n#> $foo\n#> [1] \"foo:suffix\"\n#> \n#> $bar\n#> [1] \"bar:suffix\"\nl1 <- list(list(a = 1L), list(a = NULL, b = 2L), list(b = 3L))\nmap(.x = l1, .f = \"a\", .default = \"???\")\n#> [[1]]\n#> [1] 1\n#> \n#> [[2]]\n#> [1] \"???\"\n#> \n#> [[3]]\n#> [1] \"???\"\nl1 %>% map_int(\"b\", .default = NA)\n#> [1] NA  2  3\nl1 %>% map_int(2, .default = NA)\n#> [1] NA  2 NA\ndata <- \nmtcars %>%\n  split(.$cyl)\n\ndata <- map(.x = data, .f = ~ lm(mpg ~ wt, data = .x))\n  \ndata <- map(.x = data, .f = summary)\n  \nmap(.x = data, .f = \"r.squared\")\n#> $`4`\n#> [1] 0.5086326\n#> \n#> $`6`\n#> [1] 0.4645102\n#> \n#> $`8`\n#> [1] 0.4229655\nmap_dbl(.x = data, .f = \"r.squared\")\n#>         4         6         8 \n#> 0.5086326 0.4645102 0.4229655\ndf <- matrix(sample(1:20), nrow = 4) %>% \n  as.data.frame()\ndf\n#>   V1 V2 V3 V4 V5\n#> 1  8 14 15 19  1\n#> 2  7 10  2 18  4\n#> 3  9  3 20 12  6\n#> 4 13  5 17 16 11\nmap(.x = df, .f = function(x) {(x - mean(x)) / sd(x)})\n#> $V1\n#> [1] -0.47529319 -0.85552774 -0.09505864  1.42587956\n#> \n#> $V2\n#> [1]  1.2080809  0.4026936 -1.0067341 -0.6040404\n#> \n#> $V3\n#> [1]  0.1889822 -1.4488638  0.8189230  0.4409586\n#> \n#> $V4\n#> [1]  0.88833014  0.56530100 -1.37287385 -0.08075729\n#> \n#> $V5\n#> [1] -1.0706196 -0.3568732  0.1189577  1.3085351\nmap_dfr(.x = df, .f = function(x) {(x - mean(x)) / sd(x)})\n#> # A tibble: 4 × 5\n#>        V1     V2     V3      V4     V5\n#>     <dbl>  <dbl>  <dbl>   <dbl>  <dbl>\n#> 1 -0.475   1.21   0.189  0.888  -1.07 \n#> 2 -0.856   0.403 -1.45   0.565  -0.357\n#> 3 -0.0951 -1.01   0.819 -1.37    0.119\n#> 4  1.43   -0.604  0.441 -0.0808  1.31\nmap_dfc(.x = df, .f = function(x) {(x - mean(x)) / sd(x)})\n#> # A tibble: 4 × 5\n#>        V1     V2     V3      V4     V5\n#>     <dbl>  <dbl>  <dbl>   <dbl>  <dbl>\n#> 1 -0.475   1.21   0.189  0.888  -1.07 \n#> 2 -0.856   0.403 -1.45   0.565  -0.357\n#> 3 -0.0951 -1.01   0.819 -1.37    0.119\n#> 4  1.43   -0.604  0.441 -0.0808  1.31\nwalk(.x = 1:10, .f = print)\n#> [1] 1\n#> [1] 2\n#> [1] 3\n#> [1] 4\n#> [1] 5\n#> [1] 6\n#> [1] 7\n#> [1] 8\n#> [1] 9\n#> [1] 10"},{"path":"tidyverse_purrr.html","id":"map变种函数","chapter":"11 功能化函数编程purrr","heading":"11.3 map变种函数","text":"和map()函数类似,purrr提供了一系列map函数的变种函数.","code":""},{"path":"tidyverse_purrr.html","id":"map2系列函数","chapter":"11 功能化函数编程purrr","heading":"11.3.1 map2系列函数","text":"map2()可以多提供一个输入变量.然后对其同时进行处理.用法如下:.x和.y是两个长度相等的向量.如果其中一个长度为1,那么会对其进行循环..f还是对向量进行处理的函数.举个例子:","code":"\nmap2(.x, .y, .f, ...)\n\nmap2_lgl(.x, .y, .f, ...)\n\nmap2_int(.x, .y, .f, ...)\n\nmap2_dbl(.x, .y, .f, ...)\n\nmap2_chr(.x, .y, .f, ...)\n\nmap2_raw(.x, .y, .f, ...)\n\nmap2_dfr(.x, .y, .f, ..., .id = NULL)\n\nmap2_dfc(.x, .y, .f, ...)\nx <- list(1, 10, 100)\ny <- list(1, 2, 3)\nz <- list(5, 50, 500)\nmap2(.x = x, .y = y, .f = ~ .x + .y)\n#> [[1]]\n#> [1] 2\n#> \n#> [[2]]\n#> [1] 12\n#> \n#> [[3]]\n#> [1] 103\nmap2(.x = x, .y = y, .f = `+`)\n#> [[1]]\n#> [1] 2\n#> \n#> [[2]]\n#> [1] 12\n#> \n#> [[3]]\n#> [1] 103"},{"path":"tidyverse_purrr.html","id":"pmap和pwalk系列函数","chapter":"11 功能化函数编程purrr","heading":"11.3.2 pmap和pwalk系列函数","text":"pmap()和pwalk()比较特殊,他们用法如下:其中.l是指一个列表(list).长度可以为任意值.如果输入的是一个data frame,那么他们是按照行进行处理的.这时候需要和map系列函数区分,以为他们是按照列进行处理的.比如下面的例子:分别将x,y和z的第一个元素,第二个元素和第三个元素相加得到最终的结果.","code":"\npmap(.l, .f, ...)\n\npmap_lgl(.l, .f, ...)\n\npmap_int(.l, .f, ...)\n\npmap_dbl(.l, .f, ...)\n\npmap_chr(.l, .f, ...)\n\npmap_raw(.l, .f, ...)\n\npmap_dfr(.l, .f, ..., .id = NULL)\n\npmap_dfc(.l, .f, ...)\n\npwalk(.l, .f, ...)\npmap(.l = list(x, y, z), .f = sum)\n#> [[1]]\n#> [1] 7\n#> \n#> [[2]]\n#> [1] 62\n#> \n#> [[3]]\n#> [1] 603\npmap(list(x, y, z), function(a, b, c) a / (b + c))\n#> [[1]]\n#> [1] 0.1666667\n#> \n#> [[2]]\n#> [1] 0.1923077\n#> \n#> [[3]]\n#> [1] 0.1988072"},{"path":"regularexpression.html","id":"regularexpression","chapter":"12 正则表达式","heading":"12 正则表达式","text":"正则表达式(regular expression)是文本处理中经常用到的方法.正则表达式描述了一种字符串匹配的模式（pattern）.在R中,正则表达式跟其他语言基本一致,要写成文本的格式,也就是需要使用双引号或者单引号括起来.","code":""},{"path":"regularexpression.html","id":"特殊字符","chapter":"12 正则表达式","heading":"12.1 特殊字符","text":"在正则表达式中有一些字符是有特殊含义的,比如点(.),如果只写点,它代表任意字符,这些称之为特殊字符,或者元字符.正则表达式中就有很多这样元字符.总结如下:这里面有很多是和后面的内容重复的,因此这里写的比较简略.如果想要匹配特殊字符,那么需要对其进行转义,这时候就用到了转义符,也就是\\.但是因为转义符本身也是特殊字符,所以它本身还需要一个转义符,就是\\\\.因此比如我们想要匹配点本身,那在pattern中,需要写作\\\\..","code":""},{"path":"regularexpression.html","id":"匹配match","chapter":"12 正则表达式","heading":"12.2 匹配(match)","text":"有一些特殊含义的匹配,在正则表达式有固定表达方式,比如任意一个数字,任意字母等.","code":""},{"path":"regularexpression.html","id":"替换-alternates","chapter":"12 正则表达式","heading":"12.3 替换 (Alternates)","text":"","code":""},{"path":"regularexpression.html","id":"锚点anchors","chapter":"12 正则表达式","heading":"12.4 锚点(anchors)","text":"锚点,又称为定位符,能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。","code":""},{"path":"regularexpression.html","id":"以固定要求开头","chapter":"12 正则表达式","heading":"12.4.1 以固定要求开头","text":"以固定要求开头的正则表达式是^,比如我们要查找那些以字母a开头的字符串,就可以写作:在R语言中:","code":"'^a'\ngrep(pattern = \"^a\", x = c(\"abc\", \"bcd\", \"cde\", \"ade\"))\n#> [1] 1 4"},{"path":"regularexpression.html","id":"以固定要求结尾","chapter":"12 正则表达式","heading":"12.4.2 以固定要求结尾","text":"以固定要求结尾的正则表达式是$,比如我们要查找那些以字母a结尾的字符串,就可以写作:在R语言中:","code":"'a$'\ngrep(pattern = \"a$\", x = c(\"abc\", \"bcd\", \"cde\", \"ada\"))\n#> [1] 4"},{"path":"regularexpression.html","id":"数量quantifiers","chapter":"12 正则表达式","heading":"12.5 数量(Quantifiers)","text":"正则表达式中经常需要有一些表达数量的内容,比如重复1次,重复多于一次等等.一般是使用一些特殊字符在某个要重复的内容之后.称之为限定符:重复或者数量还涉及到贪婪和懒惰的问题:","code":""},{"path":"regularexpression.html","id":"整体匹配-groups","chapter":"12 正则表达式","heading":"12.6 整体匹配 (groups)","text":"如果需要将某个对象最为整体进行匹配,一般是使用小括号将其括起来.比如:小括号中就代表一个整体,也即是ab或者d然后后面带着e.","code":"(ab|d)e"},{"path":"regularexpression.html","id":"反义","chapter":"12 正则表达式","heading":"12.7 反义","text":"有时需要查找不属于某个能简单定义的字符类的字符。比如想查找除了数字以外，其它任意字符都行的情况，这时需要用到反义:","code":""},{"path":"multiomics.html","id":"multiomics","chapter":"13 多组学分析","heading":"13 多组学分析","text":"","code":""},{"path":"multiomics.html","id":"wgcna","chapter":"13 多组学分析","heading":"13.1 WGCNA","text":"使用官方例子进行学习.https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/","code":""},{"path":"multiomics.html","id":"基础概念","chapter":"13 多组学分析","heading":"13.2 基础概念","text":"参考这篇文章.https://www.omicshare.com/class/Public/Upload/video/20170607150629336688.pdf","code":""},{"path":"multiomics.html","id":"无尺度网络scale-free-network","chapter":"13 多组学分析","heading":"13.2.1 无尺度网络(scale free network)","text":"基因符合无尺度分布无尺度网络是指大部分节点的degree(与其相连的node)非常少,而小部分的node与非常多的节点相连.如果使用数学语言进行描述:假设某个基因(node)的degree为m,统计网络中所有的基因的m值,然后以m值大小对基因进行分类,n为基因连接数为m的基因,那么m和n成反比.","code":""},{"path":"multiomics.html","id":"模块module和模块特征值","chapter":"13 多组学分析","heading":"13.2.2 模块(module)和模块特征值","text":"模块是指表达模式相似的一组基因.模块特征值:将一组基因归为一个模块之后,如果我们想对该模块进行定量化表示,就需要使用一个值来进行表示该模块在所有样品中的表达值.这时候一般是使用该模块中的所有基因进行PCA分析,然后使用PC1(主成分1)来表示.","code":""},{"path":"multiomics.html","id":"连通性-connectivity","chapter":"13 多组学分析","heading":"13.2.3 连通性 (Connectivity)","text":"一个基因和其他所有基因的连接程度,一般只在模块内计算,称之为连接度(connectivity)或者degree.对于非权重网络来说,因为edge没有权重,因此有边就是1,没有边就是0,因此degree就是该基因的边的个数.对于权重网络,边是有权重的,因此,每个基因的degree是值所有边的权重之和.","code":""},{"path":"multiomics.html","id":"hub-gene","chapter":"13 多组学分析","heading":"13.2.4 Hub gene","text":"在一个模块中,degree排名靠前的基因,说明其处于枢纽位置,称之为hug gene.","code":""},{"path":"multiomics.html","id":"wgcna-介绍","chapter":"13 多组学分析","heading":"13.3 WGCNA 介绍","text":"全称为weighted gene co-expression network analysis.将研究重点从单个基因转移到模块.计算的两个关键步骤:1)计算基因间的相关性,2)将基因画为模块.","code":""},{"path":"multiomics.html","id":"计算基因的相关性","chapter":"13 多组学分析","heading":"13.3.1 计算基因的相关性","text":"计算基因的两两间相关性\\[S_{ij} = |cor(x_i,x_j)|\\]其中\\(S_{ij}\\)是基因相关性矩阵.无尺度化也就是对原始的相关性矩阵进行变换.构建相邻矩阵.为了知道两个基因表达是否类似,需要设定一个阈值(threshold),只有当基因之间的相关性大于该阈值,才认为他们之间是相似的,比如0.8.否则不相似,因此,相邻矩阵就是描述两个基因之间是否相似的矩阵.如果使用硬阈值,得到的相邻矩阵应该就是0,1矩阵.但是这种办法的缺点就在于怎么确定阈值?在WGCNA中,使用的是软阈值的办法,软阈值的思路是通过加权函数,将相邻矩阵中的元素连续化:\\[a_{ij} = power(S_{ij}, \\beta) = |S_{ij}|^\\beta\\]在这里使用的是power函数.需要设置soft threshold,这时候需要确定power函数的参数β.如何选择合适的β呢?WGCNA的作者提供了两个标准:网络更接近无尺度网络; 2) 尽可能保留连通性信息.β是WGCNA中第一个关键参数,后面在实际例子中进行详解.基因间表达相关性上面我们得到了基因间的相邻矩阵,WGCNA为了更准确的表示两个基因间表达的相似性,还引入了另外一个概念,也就是TOM(Topological Overlap Matrix),拓扑重叠矩阵,她代表的是两个基因间相似性等于直接相关+间接相关.计算公式如下:\\[TOM_{ij} = \\frac{\\displaystyle \\sum_{u}{a_{iu}a_{uj}+a_{ij}}}{min(k_i,k_j)+1-a_{ij}}\\]其中\\(\\displaystyle \\sum_{u}{a_{iu}a_{uj}}\\)代表基因i和j.\\(a_{ij}\\)代表基因i和基因j的在相邻矩阵中的值.因此,上式中的分子代表的是基因i和j直接联系加上一阶(基因u)基因联系的和.而\\(k_i\\)代表基因k的degree,也就是基因k和其他所有直接连接的基因的关系之和.TOM值的取值范围也是0-1.TOM值也就是WGCNA中最后的weight值.聚类得到TOM值之后,也就得到了TOM矩阵.然后利用TOM矩阵,就可以对基因进行聚类了.WGCNA中使用的是层级聚类,聚类结束之后,就可以对分支进行剪切区分.得到module.后续生物学意义挖掘得到模块之后,可以对模块进行生物学意义的挖掘.","code":""},{"path":"multiomics.html","id":"使用wgcna包进行分析","chapter":"13 多组学分析","heading":"13.4 使用WGCNA包进行分析","text":"","code":""},{"path":"multiomics.html","id":"data-input-and-cleaning","chapter":"13 多组学分析","heading":"13.4.1 Data input and cleaning","text":"首先读取数据并清洗可以看到该数据行是基因,列是样品.一共3600个基因.然后将基因的描述列去掉.并且将其转置,得到的matrix行是样品,列是基因.然后需要去除掉数据(表达矩阵)中的outlier基因和样品.使用的是goodSamplesGenes()函数.该函数用来检查数据中的基因是否符合要求,返回结果是一个list.如果allOK为TRUE,则代表通过检查,如果不是TRUE,则需要手动去除基因和样品:我们可以使用数据对样品进行聚类,然后观察有哪些明显的outlier samples.我们可以设定剪枝的阈值,比如我们设置为15,然后使用cutreeStatic()函数对样品进行分类.可以明显的看到一个outlier sample(0).可以手动删除,也可以自动的办法.datExpr就是我们最终用来进行network分析的表达数据.一共3600个基因,134个样品.下面我们需要读取clinical data.后续需要使用clinical data和模块数据做分析.这时候我们得到的datTraits就是clinicaldata,其中行为样品,列为变量.下面我们来看看样品的临床数据的热图和样品的基因的聚类.最后,把数据保存下来,准备后续的分析.","code":"\nlibrary(WGCNA)\nlibrary(tidyverse)\nfemData <- \n  read.csv(\"WGCNA_test/LiverFemale3600.csv\")\ndim(femData)\ncolnames(femData) %>% head()\ndata_exp0 <-\n  as.data.frame(t(femData[, -c(1:8)]), stringsAsFactors = FALSE)\ncolnames(data_exp0) = femData$substanceBXH\nrownames(data_exp0) = colnames(femData)[-c(1:8)]\ngsg <- goodSamplesGenes(data_exp0, verbose = 3)\ngsg$allOK\nif (!gsg$allOK){\n  # Remove the offending genes and samples from the data:\n  data_exp0 <- data_exp0[gsg$goodSamples, gsg$goodGenes]\n}\nsampleTree <- hclust(dist(data_exp0), method = \"average\")\nplot(\n  sampleTree,\n  main = \"Sample clustering to detect outliers\",\n  sub = \"\",\n  xlab = \"\",\n  cex.lab = 1,\n  cex.axis = 1,\n  cex.main = 1\n)\n# Determine cluster under the line\nclust = cutreeStatic(sampleTree, cutHeight = 15, minSize = 10)\ntable(clust)\n# clust 1 contains the samples we want to keep.\nkeepSamples = which(clust == 1)\ndatExpr = data_exp0[keepSamples,]\nnGenes = ncol(datExpr)\nnSamples = nrow(datExpr)\nnGenes\nnSamples\ntraitData <- read.csv(\"WGCNA_test/ClinicalTraits.csv\")\ndim(traitData)\nnames(traitData)\n# remove columns that hold information we do not need.\nallTraits = traitData[, -c(31, 16)]\nallTraits = allTraits[, c(2, 11:36)]\ndim(allTraits)\nnames(allTraits)\n# Form a data frame analogous to expression data that will hold the clinical traits.\nfemaleSamples = rownames(datExpr)\ntraitRows = match(femaleSamples, allTraits$Mice)\ndatTraits = allTraits[traitRows, -1]\nrownames(datTraits) = allTraits[traitRows, 1]\ncollectGarbage()\nsum(rownames(datTraits) == rownames(datExpr))\n# Re-cluster samples\nsampleTree2 <- hclust(dist(datExpr), method = \"average\")\n# Convert traits to a color representation: white means low, red means high, grey means missing entry\ntraitColors = numbers2colors(datTraits, signed = FALSE)\n# Plot the sample dendrogram and the colors underneath.\nplotDendroAndColors(dendro = sampleTree2,\n                    colors = traitColors,\n                    groupLabels = names(datTraits),\n                    main = \"Sample dendrogram and trait heatmap\")\nsave(datExpr, datTraits, file = \"WGCNA_test/FemaleLiver-01-dataInput.RData\")"},{"path":"multiomics.html","id":"network-analysis-of-liver-expression-data-in-female-mice","chapter":"13 多组学分析","heading":"13.4.2 Network analysis of liver expression data in female mice","text":"数据都准备好之后,下面就是做网络分析和module detection.首先需要设置R运行环境,主要是要能够进行多线程处理,然后读取数据:Automatic network construction module detectionWGCNA的第一个重要参数,就是构建相邻矩阵是的power函数的参数β.首先需要选择合适的soft-thresholding power在WGCNA中,使用pickSoftThreshold()函数.一般需要选择一系列candidate powers,然后根据结果进行选择.注意,这段代码在Rstudio中不能运行,运行出错,需要到R自带IDE或者终端中运行.左边图显示的是power和scale free topology fit的关系,右图显示的是power和mean connectivity的关系,一般选择能够使scale free topology fit达到最大时的最小的power.这里我们选择6.确定了power(β)参数之后,后面使用blockwiseModules()函数就可以得到modules.dataExpr是基因表达数据,行是样品,列基因.在这里我们选择了soft thresholding power 6, 然后最小module size设置为30.mergeCutHeight用来控制merge module.maxBlockSize: 是指最大的module的基因数量,默认为5000.net是最终的分类结果.下面看一下分类结果.使用颜色来表示module,代表这里面有18个module.标记为0的基因代表没有归为任何一类module.下面我们把module画出来.然后将结果保存,用于后续的分析.","code":"\nenableWGCNAThreads(nThreads = 6)\n# Load the data saved in the first part\nlnames = load(file = \"WGCNA_test/FemaleLiver-01-dataInput.RData\")\n#The variable lnames contains the names of loaded variables.\nlnames\n# Choose a set of soft-thresholding powers\npowers = c(c(1:10), seq(from = 12, to = 20, by = 2))\n# Call the network topology analysis function\nsft = pickSoftThreshold(datExpr, powerVector = powers, verbose = 5)\nsave(sft, file = \"WGCNA_test/sft\")\nload(\"WGCNA_test/sft\")\npowers = c(c(1:10), seq(from = 12, to = 20, by = 2))\n# Scale-free topology fit index as a function of the soft-thresholding power\nsft$fitIndices %>% \n  ggplot(aes(x = Power, y = -sign(slope) * SFT.R.sq)) +\n  geom_hline(yintercept = 0.9, col = \"red\") +\n  geom_point(size = 2, shape = 16) +\n  ggrepel::geom_text_repel(aes(x = Power, y = -sign(slope) * SFT.R.sq, label = Power),\n                           color = \"red\") +\n  labs(x = \"Soft Threshold (power)\", \n       y = \"Scale Free Topology Model Fit,signed R^2\") +\n  theme_bw() +\n  theme(axis.title = element_text(size = 15), \n        axis.text = element_text(size = 13))\n# Mean connectivity as a function of the soft-thresholding power\nsft$fitIndices %>% \n  ggplot(aes(x = Power, y = mean.k.)) +\n  geom_point(size = 2, shape = 16) +\n  ggrepel::geom_text_repel(aes(x = Power, y = mean.k., label = Power),\n                           color = \"red\") +\n  labs(x = \"Soft Threshold (power)\", \n       y = \"Mean Connectivity\") +\n  theme_bw() +\n  theme(axis.title = element_text(size = 15), \n        axis.text = element_text(size = 13))\nnet <- blockwiseModules(\n  datExpr,\n  power = 6,\n  TOMType = \"unsigned\",\n  minModuleSize = 30,\n  reassignThreshold = 0,\n  mergeCutHeight = 0.25,\n  numericLabels = TRUE,\n  pamRespectsDendro = FALSE,\n  saveTOMs = TRUE,\n  saveTOMFileBase = \"femaleMouseTOM\",\n  verbose = 3\n)\nnames(net)\ntable(net$colors)\n# Convert labels to colors for plotting\nmergedColors = labels2colors(net$colors)\n# Plot the dendrogram and the module colors underneath\nplotDendroAndColors(\n  net$dendrograms[[1]],\n  mergedColors[net$blockGenes[[1]]],\n  \"Module colors\",\n  dendroLabels = FALSE,\n  hang = 0.03,\n  addGuide = TRUE,\n  guideHang = 0.05\n)\nmoduleLabels = net$colors\nmoduleColors = labels2colors(net$colors)\nMEs = net$MEs\n\ngeneTree = net$dendrograms[[1]]\n\nsave(MEs, moduleLabels, moduleColors, geneTree, net,\n     file = \"WGCNA_test/FemaleLiver-02-networkConstruction-auto.RData\")"},{"path":"multiomics.html","id":"relating-modules-to-external-information-and-identifying-important","chapter":"13 多组学分析","heading":"13.4.3 Relating modules to external information and identifying important","text":"首先加载上一步产生的数据:然后我们想要找到和clinical data关系非常紧密的module.对于每个module的来说,都有一个eigengene,也就是其PCA分析的第一主成分,用来代表该module在每个样品中的含量.这个矩阵除了可以从最终的结果net中直接得到,还可以使用下面的函数moduleEigengenes得到.我们也可以把这个数据和从net中直接得到的对比看一下.然后我们使用WGCNA中的cor函数计算module和clinical data的相关性.下面对correlation进行可视化:从上图中可以看出weight_g跟一些module相关性非常强.Gene relationship trait important modules: Gene Significance Module MembershipIntramodular analysis: identifying genes high GS MMSummary output network analysis results","code":"\nlnames = load(file = \"WGCNA_test/FemaleLiver-01-dataInput.RData\");\n#The variable lnames contains the names of loaded variables.\nlnames\n# Load network data saved in the second part.\nlnames = load(file = \"WGCNA_test/FemaleLiver-02-networkConstruction-auto.RData\");\nlnames\n# Recalculate MEs with color labels\nMEs0 = moduleEigengenes(expr = datExpr, colors = moduleColors)$eigengenes\nMEs = orderMEs(MEs0)\ntest <- net$MEs\ndata.frame(colnames(test), colnames(MEs), stringsAsFactors = FALSE) %>% \n  dplyr::distinct() %>% \n  dplyr::arrange()\n\ndata.frame(moduleColors, net$colors, stringsAsFactors = FALSE) %>% \n  dplyr::distinct() %>% \n  dplyr::arrange()\n# Define numbers of genes and samples\nnGenes = ncol(datExpr)\nnSamples = nrow(datExpr)\nmoduleTraitCor = WGCNA::cor(MEs, datTraits, use = \"p\")\nmoduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)\n# Will display correlations and their p-values\ntextMatrix = paste(signif(moduleTraitCor, 2), \"\\n(\",\nsignif(moduleTraitPvalue, 1), \")\", sep = \"\")\ndim(textMatrix) = dim(moduleTraitCor)\npar(mar = c(6, 8.5, 3, 3))\n# Display the correlation values within a heatmap plot\nlabeledHeatmap(Matrix = moduleTraitCor,\nxLabels = names(datTraits),\nyLabels = names(MEs),\nySymbols = names(MEs),\ncolorLabels = FALSE,\ncolors = greenWhiteRed(50),\n# textMatrix = textMatrix,\nsetStdMargins = FALSE,\ncex.text = 0.5,\nzlim = c(-1,1),\nmain = paste(\"Module-trait relationships\"))\n# Define variable weight containing the weight column of datTrait\nweight = as.data.frame(datTraits$weight_g)\ncolnames(weight) = \"weight\"\n# names (colors) of the modules\nmodNames = substring(names(MEs), 3)\n##计算每个基因和module的相关性\ngeneModuleMembership = as.data.frame(WGCNA::cor(datExpr, MEs, use = \"p\"))\nMMPvalue = as.data.frame(corPvalueStudent(as.matrix(geneModuleMembership), nSamples))\nnames(geneModuleMembership) = paste(\"MM\", modNames, sep = \"\")\nnames(MMPvalue) = paste(\"p.MM\", modNames, sep = \"\")\n##计算基因和weight的相关性\ngeneTraitSignificance = as.data.frame(cor(datExpr, weight, use = \"p\"))\nGSPvalue = as.data.frame(corPvalueStudent(as.matrix(geneTraitSignificance), nSamples))\n\nnames(geneTraitSignificance) = paste(\"GS.\", names(weight), sep = \"\")\nnames(GSPvalue) = paste(\"p.GS.\", names(weight), sep = \"\")\nmodule = \"brown\"\ncolumn = match(module, modNames)\nmoduleGenes = moduleColors==module\npar(mfrow = c(1, 1))\nverboseScatterplot(\n  abs(geneModuleMembership[moduleGenes, column]),\n  abs(geneTraitSignificance[moduleGenes, 1]),\n  xlab = paste(\"Module Membership in\", module, \"module\"),\n  ylab = \"Gene significance for body weight\",\n  main = paste(\"Module membership vs. gene significance\\n\"),\n  cex.main = 1.2,\n  cex.lab = 1.2,\n  cex.axis = 1.2,\n  col = module\n)\nhead(names(datExpr))\nhead(names(datExpr)[moduleColors==\"brown\"])\nannot <- \n  read.csv(file = \"WGCNA_test/GeneAnnotation.csv\")\ndim(annot)\nnames(annot)\nprobes = names(datExpr)\nprobes2annot = match(probes, annot$substanceBXH)\n# The following is the number or probes without annotation:\nsum(is.na(probes2annot))\n# Create the starting data frame\ngeneInfo0 = data.frame(substanceBXH = probes,\ngeneSymbol = annot$gene_symbol[probes2annot],\nLocusLinkID = annot$LocusLinkID[probes2annot],\nmoduleColor = moduleColors,\ngeneTraitSignificance,\nGSPvalue)\n# Order modules by their significance for weight\nmodOrder = order(-abs(cor(MEs, weight, use = \"p\")));\n# Add module membership information in the chosen order\nfor (mod in 1:ncol(geneModuleMembership))\n{\noldNames = names(geneInfo0)\ngeneInfo0 = data.frame(geneInfo0, geneModuleMembership[, modOrder[mod]],\nMMPvalue[, modOrder[mod]]);\nnames(geneInfo0) = c(oldNames, paste(\"MM.\", modNames[modOrder[mod]], sep=\"\"),\npaste(\"p.MM.\", modNames[modOrder[mod]], sep=\"\"))\n}\n# Order the genes in the geneInfo variable first by module color, then by geneTraitSignificance\ngeneOrder = order(geneInfo0$moduleColor, -abs(geneInfo0$GS.weight));\ngeneInfo = geneInfo0[geneOrder, ]\nwrite.csv(geneInfo, file = \"WGCNA_test/geneInfo.csv\")"},{"path":"multiomics.html","id":"对module进行分析","chapter":"13 多组学分析","heading":"13.4.4 对module进行分析","text":"在前文中,鉴定出了几个和weight相关的module.一般需要进行GO注释或者KEGG pathway分析.","code":""},{"path":"biostatistics.html","id":"biostatistics","chapter":"14 Modern Statistics for Modern Biology","heading":"14 Modern Statistics for Modern Biology","text":"","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
